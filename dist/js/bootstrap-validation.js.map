{"version":3,"file":"bootstrap-validation.js","sources":["../../src/constants/index.js","../../src/utils/index.js","../../src/rules/notEmpty.js","../../src/rules/stringLength.js","../../src/rules/index.js","../../src/bootstrap-validation.js"],"sourcesContent":["// 版本号\r\nconst VERSION = '0.5.3'\r\n\r\n//默认选项\r\nconst DEFAULTS = {\r\n    // 第一个无效字段将自动聚焦\r\n    autoFocus: true,\r\n\r\n    //错误消息容器。可以是:\r\n    // - 'tooltip' 如果要使用引导工具提示显示错误消息\r\n    // - 'popover' 如果要使用引导弹出窗口显示错误消息\r\n    // - css选择器指定的容器\r\n    // 在前两种情况下，由于工具提示/popover应该足够小，因此插件只显示一条错误消息\r\n    // 您还可以为特定字段定义消息容器\r\n    container: null,\r\n\r\n    // 表单CSS类\r\n    elementClass: 'bv-form',\r\n\r\n    // 使用自定义事件名称以避免jQuery调用window.onerror\r\n    // See https://github.com/nghuuphuoc/bootstrapvalidator/issues/630\r\n    events: {\r\n        formInit: 'init.form.bv',\r\n        formError: 'error.form.bv',\r\n        formSuccess: 'success.form.bv',\r\n        fieldAdded: 'added.field.bv',\r\n        fieldRemoved: 'removed.field.bv',\r\n        fieldInit: 'init.field.bv',\r\n        fieldError: 'error.field.bv',\r\n        fieldSuccess: 'success.field.bv',\r\n        fieldStatus: 'status.field.bv',\r\n        validatorError: 'error.validator.bv',\r\n        validatorSuccess: 'success.validator.bv'\r\n    },\r\n\r\n    // 指示将不被验证的字段\r\n    excluded: [':disabled', ':hidden', ':not(:visible)'],\r\n    //反馈图标\r\n    feedbackIcons: {\r\n        valid: null,\r\n        invalid: null,\r\n        validating: null\r\n    },\r\n\r\n\r\n    // 使用验证器规则映射字段名称\r\n    fields: null,\r\n\r\n    // 用于指示元素的CSS选择器由字段组成\r\n    // 默认情况下，每个字段都放置在<div class=“form group”></div>中\r\n    // 如果您的表单组包含许多字段，但并非所有字段都需要验证，则应调整此选项\r\n    group: '.form-group',\r\n\r\n    // 实时验证选项\r\n    // 可以是3个值之一:\r\n    // - enabled: 该插件在字段更改后立即验证字段\r\n    // - disabled: 禁用实时验证。只有在提交表单后才会显示错误消息\r\n    // - submitted: 表单提交后启用实时验证\r\n    live: 'enabled',\r\n\r\n    // 默认无效消息\r\n    message: 'This value is not valid',\r\n\r\n    // 提交按钮选择器\r\n    // 这些按钮将被禁用，以防止有效表单多次提交\r\n    submitButtons: '[type=\"submit\"]',\r\n\r\n    // 如果字段长度小于此字符数，则不会对其进行实时验证\r\n    threshold: null,\r\n\r\n    // 验证字段时是否详细.\r\n    // 可能值:\r\n    // - true:  当一个字段有多个验证器时，将分别检查所有验证器，如果多个验证器中出现错误，则将向用户显示所有验证器\r\n    // - false: 当一个字段有多个验证器时，该字段的验证将在第一次遇到错误时终止。因此，只有与该字段相关的第一条错误消息才会显示给用户\r\n    verbose: true\r\n};\r\nexport default {\r\n    VERSION,\r\n    DEFAULTS,\r\n}\r\n","export default {\r\n\r\n    /**\r\n     * 执行回调函数\r\n     *\r\n     * @param {String|Function} functionName Can be\r\n     * - 全局函数的名称\r\n     * - 命名空间函数的名称（如A.B.C）\r\n     * - 函数\r\n     * @param {Array} args 回调参数\r\n     */\r\n    call(functionName, args) {\r\n        if ('function' === typeof functionName) {\r\n            return functionName.apply(this, args);\r\n        } else if ('string' === typeof functionName) {\r\n            if ('()' === functionName.substring(functionName.length - 2)) {\r\n                functionName = functionName.substring(0, functionName.length - 2);\r\n            }\r\n            let ns = functionName.split('.'),\r\n                func = ns.pop(),\r\n                context = window;\r\n            for (let i = 0; i < ns.length; i++) {\r\n                context = context[ns[i]];\r\n            }\r\n            return (typeof context[func] === 'undefined') ? null : context[func].apply(this, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置字符串格式\r\n     * 它用于格式化错误消息\r\n     * format（“字段必须介于%s和%s之间”，[10，20]）=“字段必须在10和20之间”\r\n     *\r\n     * @param {String} message\r\n     * @param {Array} parameters\r\n     * @returns {String}\r\n     */\r\n    format(message, parameters) {\r\n        if (!$.isArray(parameters)) {\r\n            parameters = [parameters];\r\n        }\r\n\r\n        for (let i in parameters) {\r\n            message = message.replace('%s', parameters[i]);\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /**\r\n     * 验证日期\r\n     *\r\n     * @param {Number} year 4位数的全年\r\n     * @param {Number} month 月份编号\r\n     * @param {Number} day 日期编号\r\n     * @param {Boolean} [notInFuture] 如果为true，则日期不得在将来\r\n     * @returns {Boolean}\r\n     */\r\n    date(year, month, day, notInFuture) {\r\n        if (isNaN(year) || isNaN(month) || isNaN(day)) {\r\n            return false;\r\n        }\r\n        if (day.length > 2 || month.length > 2 || year.length > 4) {\r\n            return false;\r\n        }\r\n\r\n        day = parseInt(day, 10);\r\n        month = parseInt(month, 10);\r\n        year = parseInt(year, 10);\r\n\r\n        if (year < 1000 || year > 9999 || month <= 0 || month > 12) {\r\n            return false;\r\n        }\r\n        let numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        // Update the number of days in Feb of leap year\r\n        if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n            numDays[1] = 29;\r\n        }\r\n\r\n        // Check the day\r\n        if (day <= 0 || day > numDays[month - 1]) {\r\n            return false;\r\n        }\r\n\r\n        if (notInFuture === true) {\r\n            let currentDate = new Date(),\r\n                currentYear = currentDate.getFullYear(),\r\n                currentMonth = currentDate.getMonth(),\r\n                currentDay = currentDate.getDate();\r\n            return (year < currentYear\r\n                || (year === currentYear && month - 1 < currentMonth)\r\n                || (year === currentYear && month - 1 === currentMonth && day < currentDay));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * 实现Luhn验证算法\r\n     * Credit to https://gist.github.com/ShirtlessKirk/2134376\r\n     *\r\n     * @see http://en.wikipedia.org/wiki/Luhn\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    luhn(value) {\r\n        let length = value.length,\r\n            mul = 0,\r\n            prodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\r\n            sum = 0;\r\n\r\n        while (length--) {\r\n            sum += prodArr[mul][parseInt(value.charAt(length), 10)];\r\n            mul ^= 1;\r\n        }\r\n\r\n        return (sum % 10 === 0 && sum > 0);\r\n    },\r\n\r\n    /**\r\n     * 实现模数11，10（ISO 7064）算法\r\n     *\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    mod11And10(value) {\r\n        let check = 5,\r\n            length = value.length;\r\n        for (let i = 0; i < length; i++) {\r\n            check = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;\r\n        }\r\n        return (check === 1);\r\n    },\r\n\r\n    /**\r\n     * 实施Mod 37、36（ISO 7064）算法\r\n     * Usages:\r\n     * mod37And36('A12425GABC1234002M')\r\n     * mod37And36('002006673085', '0123456789')\r\n     *\r\n     * @param {String} value\r\n     * @param {String} [alphabet]\r\n     * @returns {Boolean}\r\n     */\r\n    mod37And36(value, alphabet) {\r\n        alphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        let modulus = alphabet.length,\r\n            length = value.length,\r\n            check = Math.floor(modulus / 2);\r\n        for (let i = 0; i < length; i++) {\r\n            check = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;\r\n        }\r\n        return (check === 1);\r\n    }\r\n\r\n}\r\n","export default {\r\n\r\n    enableByHtml5($field) {\r\n        let required = $field.attr('required') + '';\r\n        return ('required' === required || 'true' === required);\r\n    },\r\n\r\n    /**\r\n     * Check if input value is empty or not\r\n     *\r\n     * @param {BootstrapValidator} validator The validator plugin instance\r\n     * @param {jQuery} $field Field element\r\n     * @param {Object} options\r\n     * @returns {Boolean}\r\n     */\r\n    validate(validator, $field, options) {\r\n        console.log(options)\r\n        let type = $field.attr('type');\r\n        if ('radio' === type || 'checkbox' === type) {\r\n            return validator\r\n                .getFieldElements($field.attr('data-bv-field'))\r\n                .filter(':checked')\r\n                .length > 0;\r\n        }\r\n\r\n        if ('number' === type && $field.get(0).validity && $field.get(0).validity.badInput === true) {\r\n            return true;\r\n        }\r\n\r\n        return $.trim($field.val()) !== '';\r\n    }\r\n}\r\n","import Utils from \"../utils\";\r\n\r\nexport default {\r\n    html5Attributes: {\r\n        message: 'message',\r\n        min: 'min',\r\n        max: 'max',\r\n        trim: 'trim',\r\n        utf8bytes: 'utf8Bytes'\r\n    },\r\n\r\n    enableByHtml5: function ($field) {\r\n        let options = {},\r\n            maxLength = $field.attr('maxlength'),\r\n            minLength = $field.attr('minlength');\r\n        if (maxLength) {\r\n            options.max = parseInt(maxLength, 10);\r\n        }\r\n        if (minLength) {\r\n            options.min = parseInt(minLength, 10);\r\n        }\r\n\r\n        return $.isEmptyObject(options) ? false : options;\r\n    },\r\n\r\n    /**\r\n     * Check if the length of element value is less or more than given number\r\n     *\r\n     * @param {BootstrapValidator} validator The validator plugin instance\r\n     * @param {jQuery} $field Field element\r\n     * @param {Object} options Consists of following keys:\r\n     * - min\r\n     * - max\r\n     * At least one of two keys is required\r\n     * The min, max keys define the number which the field value compares to. min, max can be\r\n     *      - A number\r\n     *      - Name of field which its value defines the number\r\n     *      - Name of callback function that returns the number\r\n     *      - A callback function that returns the number\r\n     *\r\n     * - message: The invalid message\r\n     * - trim: Indicate the length will be calculated after trimming the value or not. It is false, by default\r\n     * - utf8bytes: Evaluate string length in UTF-8 bytes, default to false\r\n     * @returns {Object}\r\n     */\r\n    validate: function (validator, $field, options) {\r\n        let value = $field.val();\r\n        if (options.trim === true || options.trim === 'true') {\r\n            value = $.trim(value);\r\n        }\r\n\r\n        if (value === '') {\r\n            return true;\r\n        }\r\n\r\n        let min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n            max = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\r\n            // Credit to http://stackoverflow.com/a/23329386 (@lovasoa) for UTF-8 byte length code\r\n            utf8Length = function (str) {\r\n                let s = str.length;\r\n                for (let i = str.length - 1; i >= 0; i--) {\r\n                    let code = str.charCodeAt(i);\r\n                    if (code > 0x7f && code <= 0x7ff) {\r\n                        s++;\r\n                    } else if (code > 0x7ff && code <= 0xffff) {\r\n                        s += 2;\r\n                    }\r\n                    if (code >= 0xDC00 && code <= 0xDFFF) {\r\n                        i--;\r\n                    }\r\n                }\r\n                return s;\r\n            },\r\n            length = options.utf8Bytes ? utf8Length(value) : value.length,\r\n            isValid = true,\r\n            message = options.message || $.fn.bootstrapValidation.i18n.stringLength['default'];\r\n\r\n        if ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {\r\n            isValid = false;\r\n        }\r\n\r\n        switch (true) {\r\n            case (!!min && !!max):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n                break;\r\n\r\n            case (!!min):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.more, parseInt(min, 10));\r\n                break;\r\n\r\n            case (!!max):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.less, parseInt(max, 10));\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return {valid: isValid, message: message};\r\n    }\r\n}\r\n","import notEmpty from \"./notEmpty\";\r\nimport stringLength from \"./stringLength\";\r\n\r\nexport default {\r\n    notEmpty,\r\n    stringLength\r\n}\r\n","import $ from 'jquery'\r\nimport Constants from \"./constants\";\r\nimport Utils from \"./utils\";\r\nimport Rules from \"./rules\";\r\n\r\n\r\nconst NAME = 'bootstrapValidation'\r\n\r\n\r\nclass BootstrapValidation {\r\n\r\n    // 确定用户更改字段值时激发的事件\r\n    #changeEvent = 'input'\r\n    // 当远程/回调验证器返回时，指示表单已准备好提交的标志\r\n    #submitIfValid = null;\r\n    // 缓存的字段元素\r\n    #cacheFields = {};\r\n\r\n\r\n    constructor(el, options) {\r\n        this.options = options\r\n        this.$form = $(el)\r\n\r\n        //无效字段\r\n        this.$invalidFields = $([]);    // 无效字段数组\r\n        //提交按钮\r\n        this.$submitButton = null;     // 单击以提交表单的提交按钮\r\n        // 隐藏按钮\r\n        this.$hiddenButton = null;\r\n\r\n        // 没有验证的\r\n        this.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';\r\n        // 验证中\r\n        this.STATUS_VALIDATING = 'VALIDATING';\r\n        // 验证无效的\r\n        this.STATUS_INVALID = 'INVALID';\r\n        // 验证通过的\r\n        this.STATUS_VALID = 'VALID';\r\n\r\n        //调用初始化方法\r\n        this.#init();\r\n\r\n        let b = 10;\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化表单\r\n     */\r\n    #init() {\r\n\r\n        //that是当前实例,这里取出来是避免下面在各种匿名函数中混淆this指向\r\n\r\n        let that = this;\r\n\r\n        //默认的选项\r\n        let options = {\r\n            autoFocus: this.$form.attr('data-bv-autofocus'),\r\n            //指示错误信息的css选择器\r\n            container: this.$form.attr('data-bv-container'),\r\n            //事件从属性里读取一遍。\r\n            events: {\r\n                formInit: this.$form.attr('data-bv-events-form-init'),\r\n                formError: this.$form.attr('data-bv-events-form-error'),\r\n                formSuccess: this.$form.attr('data-bv-events-form-success'),\r\n                fieldAdded: this.$form.attr('data-bv-events-field-added'),\r\n                fieldRemoved: this.$form.attr('data-bv-events-field-removed'),\r\n                fieldInit: this.$form.attr('data-bv-events-field-init'),\r\n                fieldError: this.$form.attr('data-bv-events-field-error'),\r\n                fieldSuccess: this.$form.attr('data-bv-events-field-success'),\r\n                fieldStatus: this.$form.attr('data-bv-events-field-status'),\r\n                validatorError: this.$form.attr('data-bv-events-validator-error'),\r\n                validatorSuccess: this.$form.attr('data-bv-events-validator-success')\r\n            },\r\n            //排除验证的字段\r\n            excluded: this.$form.attr('data-bv-excluded'),\r\n            feedbackIcons: {\r\n                valid: this.$form.attr('data-bv-feedbackicons-valid'),\r\n                invalid: this.$form.attr('data-bv-feedbackicons-invalid'),\r\n                validating: this.$form.attr('data-bv-feedbackicons-validating')\r\n            },\r\n            group: this.$form.attr('data-bv-group'),\r\n            live: this.$form.attr('data-bv-live'),\r\n            message: this.$form.attr('data-bv-message'),\r\n            //错误\r\n            onError: this.$form.attr('data-bv-onerror'),\r\n            onSuccess: this.$form.attr('data-bv-onsuccess'),\r\n            //提交的按钮\r\n            submitButtons: this.$form.attr('data-bv-submitbuttons'),\r\n            threshold: this.$form.attr('data-bv-threshold'),\r\n            trigger: this.$form.attr('data-bv-trigger'),\r\n            verbose: this.$form.attr('data-bv-verbose'),\r\n            //验证的字段。\r\n            fields: {}\r\n        };\r\n\r\n        this.$form\r\n            // 禁用HTML 5中的客户端验证\r\n            .attr('novalidate', 'novalidate')\r\n            // 给表单添加了一个class '.bv-form'\r\n            .addClass(this.options.elementClass)\r\n            // 监听表单的提交事件，submit.bv 实际上就是等于 submit事件，只是这里给它加了一个命名空间.bv\r\n            .on('submit.bv', function (e) {\r\n                e.preventDefault();//首先禁用默认提交事件\r\n                that.validate();//调用验证的方法\r\n            })\r\n            //事件委托给 提交按钮 绑定一个点击事件\r\n            .on('click.bv', this.options.submitButtons, function () {\r\n\r\n                //得到 $submitButton\r\n                that.$submitButton = $(this);\r\n                // 用户点击提交按钮后，让提交有效标志设置为真\r\n                that.#submitIfValid = true;\r\n\r\n\r\n            })\r\n            // 查找具有name或data-bv-field属性的所有字段(就是每个表单元素，比如 input等、select等)\r\n            .find('[name], [data-bv-field]')\r\n            //遍历操作\r\n            .each(function () {\r\n                //得到表单字段元素的jquery对象\r\n                let $field = $(this);\r\n                //这里是得到所有的字段名称，分别从name或者data-bv-field读取\r\n                let field = $field.attr('name') || $field.attr('data-bv-field');\r\n                //调用方法，从HTML属性分析验证器选项\r\n                let opts = that.#parseOptions2($field);\r\n\r\n                if (opts) {\r\n                    //给每个表单字段元素设置data-bv-field=\"xxxx\"\r\n                    //例子<input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\" data-bv-field=\"email\">\r\n                    $field.attr('data-bv-field', field);\r\n                    //只合并到options.fields 这个对象选项上，其它的选项是不会动的\r\n                    options.fields[field] = $.extend({}, opts, options.fields[field]);\r\n                }\r\n            });\r\n\r\n\r\n        //合并大选项(到这里已经包括了field字段，但这里仅仅是只有field)\r\n        this.options = $.extend(true, this.options, options);\r\n\r\n        console.log('这里已经合并了默认选项，和插件初始化时传递过来的所有选项')\r\n        console.log(this.options)\r\n\r\n\r\n        // 当在表单中的任何字段上按Enter键时，第一个提交按钮将完成其工作\r\n        // 然后表单将会提交\r\n        // 我创建了第一个隐藏的提交按钮\r\n        this.$hiddenButton = $('<button/>')\r\n            .attr('type', 'submit')\r\n            .prependTo(this.$form)\r\n            .addClass('bv-hidden-submit')\r\n            .css({display: 'none', width: 0, height: 0});\r\n\r\n        //再次通过事件委托的方式监听提交按钮被点击后触发事件。\r\n        this.$form\r\n            .on('click.bv', '[type=\"submit\"]', function (e) {\r\n\r\n\r\n                //e.isDefaultPrevented() 用来判断 用于检测事件是否已经调用 event.preventDefault() 阻止了默认行为。如果事件调用了 event.preventDefault() 方法，则 e.isDefaultPrevented() 返回 true，否则返回 false\r\n                // e.isDefaultPrevented() 可以用来判断是否执行了默认行为的阻止操作\r\n                // #746: 检查按钮单击处理程序是否返回false\r\n                if (!e.isDefaultPrevented()) {//没有阻止默认事件，因为如果用户自己阻止了默认提交事件，我们这里就不能强制让它手动提交了。\r\n                    // console.log('!isDefaultPrevented()')\r\n                    let $target = $(e.target);\r\n                    // 按钮可能包含HTML标记，比如按钮内部或者外部有其它的html包裹，所以需要我们判断一下。\r\n                    let $button = $target.is('[type=\"submit\"]') ? $target.eq(0) : $target.parent('[type=\"submit\"]').eq(0);\r\n\r\n                    // 单击提交按钮/输入时不执行验证\r\n                    // 判断该按钮不是submitButtons定义的且也不是我们自己生成的hiddenButton\r\n                    if (that.options.submitButtons && !$button.is(that.options.submitButtons) && !$button.is(that.$hiddenButton)) {\r\n                        that.$form.off('submit.bv').submit();//模拟表单提交然后移除掉自定义绑定的事件\r\n                    }\r\n                }\r\n            });\r\n\r\n        //循环初始化每个字段\r\n        for (const field in this.options.fields) {\r\n            //初始化字段\r\n            this.#initField(field);\r\n        }\r\n\r\n        //触发表单初始化完成事件\r\n        // console.log(this.options.events.formInit)\r\n        this.$form.trigger($.Event(this.options.events.formInit), {\r\n            bv: this,\r\n            options: this.options\r\n        });\r\n\r\n        // 准备事件\r\n        if (this.options.onSuccess) {\r\n            this.$form.on(this.options.events.formSuccess, function (e) {\r\n                Utils.call(that.options.onSuccess, [e]);\r\n            });\r\n        }\r\n        if (this.options.onError) {\r\n            this.$form.on(this.options.events.formError, function (e) {\r\n                Utils.call(that.options.onError, [e]);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 从HTML属性分析验证器选项\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Object}\r\n     */\r\n    #parseOptions2($field) {\r\n        const field = $field.attr('name') || $field.attr('data-bv-field');\r\n        let validators = {};\r\n        let validator;\r\n\r\n        for (const v in $.fn.bootstrapValidation.validators) {\r\n            validator = $.fn.bootstrapValidation.validators[v];\r\n            const attrName = `data-bv-${v.toLowerCase()}`;\r\n            let enabled = $field.attr(attrName) + '';\r\n            const html5AttrMap = typeof validator.enableByHtml5 === 'function' ? validator.enableByHtml5($field) : null;\r\n\r\n            if ((html5AttrMap && enabled !== 'false') || (html5AttrMap !== true && (enabled === '' || enabled === 'true' || attrName === enabled.toLowerCase()))) {\r\n                validator.html5Attributes = {\r\n                    message: 'message',\r\n                    onerror: 'onError',\r\n                    onsuccess: 'onSuccess'\r\n                };\r\n                validators[v] = html5AttrMap === true ? {} : html5AttrMap;\r\n\r\n                for (const html5AttrName in validator.html5Attributes) {\r\n                    const optionName = validator.html5Attributes[html5AttrName];\r\n                    const optionAttrName = `data-bv-${v.toLowerCase()}-${html5AttrName}`;\r\n                    const optionValue = $field.attr(optionAttrName);\r\n\r\n                    if (optionValue) {\r\n                        validators[v][optionName] = optionValue === 'true' || optionAttrName === optionValue.toLowerCase();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const opts = {\r\n            autoFocus: $field.attr('data-bv-autofocus'),\r\n            container: $field.attr('data-bv-container'),\r\n            excluded: $field.attr('data-bv-excluded'),\r\n            feedbackIcons: $field.attr('data-bv-feedbackicons'),\r\n            group: $field.attr('data-bv-group'),\r\n            message: $field.attr('data-bv-message'),\r\n            onError: $field.attr('data-bv-onerror'),\r\n            onStatus: $field.attr('data-bv-onstatus'),\r\n            onSuccess: $field.attr('data-bv-onsuccess'),\r\n            selector: $field.attr('data-bv-selector'),\r\n            threshold: $field.attr('data-bv-threshold'),\r\n            trigger: $field.attr('data-bv-trigger'),\r\n            verbose: $field.attr('data-bv-verbose'),\r\n            validators\r\n        };\r\n\r\n        const emptyOptions = $.isEmptyObject(opts);\r\n        const emptyValidators = $.isEmptyObject(validators);\r\n\r\n        if (!emptyValidators || (!emptyOptions && this.options.fields && this.options.fields[field])) {\r\n            opts.validators = validators;\r\n\r\n            return opts;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Init字段\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     */\r\n    #initField(field) {\r\n        //创建一个空的 jQuery 集合，用于存储和管理元素\r\n        let fields = $([]);\r\n\r\n        // console.log(fields)\r\n\r\n        // console.log(typeof field)\r\n        switch (typeof field) {\r\n            case 'object': //如果传递过来的直接是一个字段元素就直接给fields赋值\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                //根据字段名称或者字段元素,并赋值给上面定义的 fields\r\n                fields = this.getFieldElements(field);\r\n                // console.log(fields)\r\n                // console.log(fields);\r\n                fields.attr('data-bv-field', field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 我们不需要验证不存在的字段\r\n        if (fields.length === 0 || this.options.fields[field] === null || this.options.fields[field].validators === null) {\r\n            return;\r\n        }\r\n\r\n\r\n        //$.fn.bootstrapValidatio.validators :这里是取对象上所有已经被注册的验证器对象集合\r\n        // console.log($.fn.bootstrapValidatio.validators)\r\n        //Object.keys(this.options.fields[field].validators) 得到的是对象的key值组成的数组，这里得到的是验证器名称数组\r\n        // 这里的作用是把传递进来的每个字段的验证器过滤一下，只保留bootstrapValidator.validators上真正存在的验证器\r\n        Object.keys(this.options.fields[field].validators).forEach(validatorName => {\r\n            if (!$.fn.bootstrapValidation.validators[validatorName]) {\r\n                delete this.options.fields[field].validators[validatorName];\r\n            }\r\n        });\r\n\r\n\r\n        //this.options.fields[field].enabled 可是这里会等于undefined,估计是作者的bug\r\n        if (this.options.fields[field].enabled === null) {//判断每个字段上对象上的enabled是否等于null，等于null则设定为true\r\n            console.log('into');\r\n            this.options.fields[field].enabled = true;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        //字段元素的长度\r\n        let total = fields.length;\r\n\r\n\r\n        //获取类型，可能是 text radio checkbox\r\n        let type = fields.attr('type');\r\n\r\n\r\n        // 判断字段元素类型为radio或者checkbox\r\n        let updateAll = (total === 1) || ('radio' === type) || ('checkbox' === type);//这里目前是永远都等于true\r\n\r\n\r\n        // 事件类型判断，如果是字段元素是 radio checkbox file SELECT 则用change事件，否则就调用 this.#changeEvent\r\n        let event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === fields.eq(0).get(0).tagName) ? 'change' : this.#changeEvent;\r\n        //得到字段上的 trigger字符串数组 ,['input']\r\n        let trigger = (this.options.fields[field].trigger || this.options.trigger || event).split(' ');\r\n        // console.log(trigger)\r\n\r\n        // 得到 'input.update.bv'\r\n        let events = $.map(trigger, function (item) {\r\n            return item + '.update.bv';\r\n        }).join(' ');\r\n\r\n\r\n        fields.each((index, fieldElement) => {\r\n\r\n            let $field = $(fieldElement);\r\n\r\n\r\n            // 字段元素容器选择器\r\n            let group = this.options.fields[field].group || this.options.group;\r\n            // 字段元素容器jq对象\r\n            let $parent = $field.parents(group);\r\n\r\n            // 允许用户指示错误消息的显示位置,email: {container:'#errors',...}\r\n            let container = ('function' === typeof (this.options.fields[field].container || this.options.container)) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : (this.options.fields[field].container || this.options.container);\r\n\r\n\r\n            // 得到错误消息容器Jq对象\r\n            let $message = (container && container !== 'tooltip' && container !== 'popover') ? $(container) : this.#getMessageContainer($field, group);\r\n\r\n            //给它加上一个.has-error 类  来自https://getbootstrap.com/docs/3.4/css/#forms\r\n            if (container && container !== 'tooltip' && container !== 'popover') {\r\n                $message.addClass('has-error');\r\n            }\r\n\r\n            // 删除所有错误消息和反馈图标\r\n            $message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]').remove();\r\n            $parent.find('i[data-bv-icon-for=\"' + field + '\"]').remove();\r\n\r\n            // 每当用户更改字段值时，将其标记为尚未验证(比如手动修改input的内容时)\r\n            $field.off(events).on(events, function () {\r\n                console.log('input被输入了触发 |' + events + '|that.updateStatus($(this), that.STATUS_NOT_VALIDATED)')\r\n                that.updateStatus($(this), that.STATUS_NOT_VALIDATED);\r\n            });\r\n\r\n            // 创建用于显示错误消息的帮助块元素\r\n            $field.data('bv.messages', $message);\r\n\r\n            Object.keys(this.options.fields[field].validators).forEach(validatorName => {\r\n                $field.data('bv.result.' + validatorName, this.STATUS_NOT_VALIDATED);\r\n\r\n                if (!updateAll || index === total - 1) {\r\n                    $('<small/>')\r\n                        .css('display', 'none')\r\n                        .addClass('help-block')\r\n                        .attr('data-bv-validator', validatorName)\r\n                        .attr('data-bv-for', field)\r\n                        .attr('data-bv-result', this.STATUS_NOT_VALIDATED)\r\n                        .html(this.#getMessage(field, validatorName))\r\n                        .appendTo($message);\r\n                }\r\n\r\n\r\n                // 初始化验证器,当验证器有init方法的时候，调用init方法\r\n                if ('function' === typeof $.fn.bootstrapValidation.validators[validatorName].init) {\r\n                    $.fn.bootstrapValidation.validators[validatorName].init(this, $field, this.options.fields[field].validators[validatorName]);\r\n                }\r\n            });\r\n\r\n\r\n            // 准备反馈图标\r\n            // 可以从Bootstrap3.1获取 (http://getbootstrap.com/css/#forms-control-validation)\r\n            if (this.options.fields[field].feedbackIcons !== false && this.options.fields[field].feedbackIcons !== 'false'\r\n                && this.options.feedbackIcons\r\n                && this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid\r\n                && (!updateAll || index === total - 1)) {\r\n                // $parent.removeClass('has-success').removeClass('has-error').addClass('has-feedback');\r\n                // 保留从后端填充的错误消息\r\n                $parent.addClass('has-feedback'); //字段元素容器，再添加一个类 https://getbootstrap.com/docs/3.4/css/#forms\r\n\r\n                //在字段元素后面插入这个反馈图标容器 i元素\r\n                let $icon = $('<i/>')\r\n                    .css('display', 'none')\r\n                    .addClass('form-control-feedback')\r\n                    .attr('data-bv-icon-for', field)\r\n                    .insertAfter($field);\r\n\r\n                // 对于复选框和单选框的错误图标要特殊处理\r\n                if ('checkbox' === type || 'radio' === type) {\r\n\r\n                    //这里得到的是label标签\r\n                    let $fieldParent = $field.parent();\r\n\r\n                    if ($fieldParent.hasClass(type)) {//如果有类 比如 class=\"checkbox\"\r\n                        $icon.insertAfter($fieldParent); //直接在后面插入\r\n                    } else if ($fieldParent.parent().hasClass(type)) {//否则判断父类的父类是否有 比如 class=\"checkbox\"\r\n                        $icon.insertAfter($fieldParent.parent());//有的话插入到父类的父类的后面。\r\n                    }\r\n                }\r\n\r\n                // 如果没有标签，反馈图标将无法正确渲染\r\n                // https://github.com/twbs/bootstrap/issues/12873\r\n                if ($parent.find('label').length === 0) {\r\n                    $icon.addClass('bv-no-label');\r\n                }\r\n                // 如果是输入框组的话 反馈图标还要再特殊处理\r\n                if ($parent.find('.input-group').length !== 0) {\r\n                    $icon.addClass('bv-icon-input-group')\r\n                        .insertAfter($parent.find('.input-group').eq(0));\r\n                }\r\n\r\n                // console.log(updateAll);\r\n\r\n                // 将图标存储为字段元素的数据\r\n                if (!updateAll) {//不是单选或者复选\r\n                    console.log($field)\r\n                    $field.data('bv.icon', $icon);\r\n                } else if (index === total - 1) { //目前只会走这里 下面还有公共api，等等看看会不会走上面\r\n                    // 具有相同名称的所有字段都具有相同的图标\r\n                    fields.data('bv.icon', $icon);\r\n                }\r\n\r\n                if (container) {//如果有传递错误消息容器\r\n                    $field\r\n                        // 当字段获得焦点时显示工具提示/弹出消息\r\n                        .off('focus.container.bv')\r\n                        .on('focus.container.bv', function () {\r\n                            console.log(container)\r\n                            switch (container) {//根据错误消息容器，判断是那一种\r\n                                case 'tooltip':\r\n                                    $(this).data('bv.icon').tooltip('show');\r\n                                    break;\r\n                                case 'popover':\r\n                                    $(this).data('bv.icon').popover('show');\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        })\r\n                        // 并在失去焦点时隐藏它们\r\n                        .off('blur.container.bv')\r\n                        .on('blur.container.bv', function () {\r\n                            switch (container) {\r\n                                case 'tooltip':\r\n                                    $(this).data('bv.icon').tooltip('hide');\r\n                                    break;\r\n                                case 'popover':\r\n                                    $(this).data('bv.icon').popover('hide');\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        // 准备事件\r\n        fields\r\n            .on(this.options.events.fieldSuccess, function (e, data) {\r\n                let onSuccess = that.getOptions(data.field, null, 'onSuccess');\r\n                if (onSuccess) {\r\n\r\n                    Utils.call(onSuccess, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.fieldError, function (e, data) {\r\n                let onError = that.getOptions(data.field, null, 'onError');\r\n                if (onError) {\r\n                    Utils.call(onError, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.fieldStatus, function (e, data) {\r\n                let onStatus = that.getOptions(data.field, null, 'onStatus');\r\n                if (onStatus) {\r\n                    Utils.call(onStatus, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.validatorError, function (e, data) {\r\n                let onError = that.getOptions(data.field, data.validator, 'onError');\r\n                if (onError) {\r\n                    Utils.call(onError, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.validatorSuccess, function (e, data) {\r\n                let onSuccess = that.getOptions(data.field, data.validator, 'onSuccess');\r\n                if (onSuccess) {\r\n                    Utils.call(onSuccess, [e, data]);\r\n                }\r\n            });\r\n\r\n        // 设置实时模式\r\n        events = $.map(trigger, function (item) {\r\n            return item + '.live.bv';\r\n        }).join(' ');\r\n\r\n        // console.log(events)\r\n\r\n        switch (this.options.live) {//判断验证模式\r\n            case 'submitted':\r\n                break;\r\n            case 'disabled':\r\n                fields.off(events);\r\n                break;\r\n            case 'enabled':\r\n            /* falls through */\r\n            default:\r\n                // console.log(fields)\r\n                fields.off(events).on(events, function () {\r\n                    if (that.#exceedThreshold($(this))) { //检测是否超过阈值\r\n                        that.validateField($(this));\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n\r\n        fields.trigger($.Event(this.options.events.fieldInit), {\r\n            bv: this,\r\n            field: field,\r\n            element: fields\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取用于放置错误消息的元素\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @param {String} group\r\n     * @returns {jQuery}\r\n     */\r\n    #getMessageContainer($field, group) {\r\n        let $parent = $field.parent();\r\n        if ($parent.is(group)) {\r\n            return $parent;\r\n        }\r\n\r\n        let cssClasses = $parent.attr('class');\r\n        if (!cssClasses) {\r\n            return this.#getMessageContainer($parent, group);\r\n        }\r\n\r\n        cssClasses = cssClasses.split(' ');\r\n        let n = cssClasses.length;\r\n        for (let i = 0; i < n; i++) {\r\n            if (/^col-(xs|sm|md|lg)-\\d+$/.test(cssClasses[i]) || /^col-(xs|sm|md|lg)-offset-\\d+$/.test(cssClasses[i])) {\r\n                return $parent;\r\n            }\r\n        }\r\n\r\n        return this.#getMessageContainer($parent, group);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取给定字段和验证器的错误消息\r\n     *\r\n     * @param {String} field 字段名\r\n     * @param {String} validatorName validator名称\r\n     * @returns {String}\r\n     */\r\n    #getMessage(field, validatorName) {\r\n        if (!this.options.fields[field] || !$.fn.bootstrapValidation.validators[validatorName]\r\n            || !this.options.fields[field].validators || !this.options.fields[field].validators[validatorName]) {\r\n            return '';\r\n        }\r\n\r\n        let options = this.options.fields[field].validators[validatorName];\r\n        switch (true) {\r\n            case (!!options.message):\r\n                return options.message;\r\n            case (!!this.options.fields[field].message):\r\n                return this.options.fields[field].message;\r\n            case (!!$.fn.bootstrapValidation.i18n[validatorName]):\r\n                return $.fn.bootstrapValidation.i18n[validatorName]['default'];\r\n            default:\r\n                return this.options.message;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查该字段是否已排除。\r\n     * 返回true表示该字段将不被验证\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    #isExcluded($field) {\r\n        let excludedAttr = $field.attr('data-bv-excluded'),\r\n            // I still need to check the 'name' attribute while initializing the field\r\n            field = $field.attr('data-bv-field') || $field.attr('name');\r\n\r\n        switch (true) {\r\n            case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'true' || this.options.fields[field].excluded === true)):\r\n            case (excludedAttr === 'true'):\r\n            case (excludedAttr === ''):\r\n                return true;\r\n\r\n            case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'false' || this.options.fields[field].excluded === false)):\r\n            case (excludedAttr === 'false'):\r\n                return false;\r\n\r\n            default:\r\n                if (this.options.excluded) {\r\n                    // Convert to array first\r\n                    if ('string' === typeof this.options.excluded) {\r\n                        this.options.excluded = $.map(this.options.excluded.split(','), function (item) {\r\n                            // Trim the spaces\r\n                            return $.trim(item);\r\n                        });\r\n                    }\r\n\r\n                    let length = this.options.excluded.length;\r\n                    for (let i = 0; i < length; i++) {\r\n                        if (('string' === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))\r\n                            || ('function' === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 在验证字段元素后调用\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @param {String} [validatorName] 验证其名称\r\n     */\r\n    #onFieldValidated($field, validatorName) {\r\n        let field = $field.attr('data-bv-field'),\r\n            validators = this.options.fields[field].validators,\r\n            counter = {},\r\n            numValidators = 0,\r\n            data = {\r\n                bv: this,\r\n                field: field,\r\n                element: $field,\r\n                validator: validatorName,\r\n                result: $field.data('bv.response.' + validatorName)\r\n            };\r\n\r\n        // Trigger an event after given validator completes\r\n        if (validatorName) {\r\n            switch ($field.data('bv.result.' + validatorName)) {\r\n                case this.STATUS_INVALID:\r\n                    $field.trigger($.Event(this.options.events.validatorError), data);\r\n                    break;\r\n                case this.STATUS_VALID:\r\n                    $field.trigger($.Event(this.options.events.validatorSuccess), data);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        counter[this.STATUS_NOT_VALIDATED] = 0;\r\n        counter[this.STATUS_VALIDATING] = 0;\r\n        counter[this.STATUS_INVALID] = 0;\r\n        counter[this.STATUS_VALID] = 0;\r\n\r\n        for (let v in validators) {\r\n            if (validators[v].enabled === false) {\r\n                continue;\r\n            }\r\n\r\n            numValidators++;\r\n            let result = $field.data('bv.result.' + v);\r\n            if (result) {\r\n                counter[result]++;\r\n            }\r\n        }\r\n\r\n        if (counter[this.STATUS_VALID] === numValidators) {\r\n            // Remove from the list of invalid fields\r\n            this.$invalidFields = this.$invalidFields.not($field);\r\n\r\n            $field.trigger($.Event(this.options.events.fieldSuccess), data);\r\n        }\r\n        // If all validators are completed and there is at least one validator which doesn't pass\r\n        else if ((counter[this.STATUS_NOT_VALIDATED] === 0 || !this.#isOptionEnabled(field, 'verbose')) && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {\r\n            // Add to the list of invalid fields\r\n            this.$invalidFields = this.$invalidFields.add($field);\r\n\r\n            $field.trigger($.Event(this.options.events.fieldError), data);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查字段选项是否已启用\r\n     *\r\n     * @param {String} field The field name\r\n     * @param {String} option The option name, \"verbose\", \"autoFocus\", for example\r\n     * @returns {Boolean}\r\n     */\r\n    #isOptionEnabled(field, option) {\r\n        if (this.options.fields[field] && (this.options.fields[field][option] === 'true' || this.options.fields[field][option] === true)) {\r\n            return true;\r\n        }\r\n        if (this.options.fields[field] && (this.options.fields[field][option] === 'false' || this.options.fields[field][option] === false)) {\r\n            return false;\r\n        }\r\n        return this.options[option] === 'true' || this.options[option] === true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查字段值的字符数是否超过阈值\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    #exceedThreshold($field) {\r\n        let field = $field.attr('data-bv-field'),\r\n            threshold = this.options.fields[field].threshold || this.options.threshold;\r\n        if (!threshold) {\r\n            return true;\r\n        }\r\n        let cannotType = $.inArray($field.attr('type'), ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit']) !== -1;\r\n        return (cannotType || $field.val().length >= threshold);\r\n    }\r\n\r\n\r\n    /**\r\n     * 按给定名称检索字段元素\r\n     *\r\n     * @param {String} field 字段名称\r\n     * @returns {null|jQuery[]}\r\n     */\r\n    getFieldElements(field) {\r\n        if (!this.#cacheFields[field]) {\r\n            this.#cacheFields[field] = (this.options.fields[field] && this.options.fields[field].selector)\r\n                ? $(this.options.fields[field].selector)\r\n                : this.$form.find('[name=\"' + field + '\"]');\r\n        }\r\n        return this.#cacheFields[field];\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新字段的所有验证结果\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @param {String} status 状态。可以是“NOT_VALIDATED”、“VALIDATION”、“INVALID”或“VALID”\r\n     * @param {String} [validatorName] 验证器名称。如果为null，该方法将更新所有验证器的有效性结果\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    updateStatus(field, status, validatorName) {\r\n        // console.log(field)\r\n\r\n        let fields = $([]);\r\n\r\n        // console.log(typeof field)\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (status === this.STATUS_NOT_VALIDATED) {//如果传递进来的状态是无验证的。\r\n            // 重置标志\r\n            // 当延迟验证器在键入时返回true时，防止表单进行提交\r\n            this.#submitIfValid = false;\r\n        }\r\n\r\n        //重新接受当前实例\r\n        let that = this;\r\n        //类型\r\n\r\n        // console.log(fields)\r\n        let type = fields.attr('type');\r\n        // console.log(type)\r\n        let group = this.options.fields[field].group || this.options.group;\r\n        //如果是单选框或者多选框则长度为1，否则就取字段的长度。\r\n        let total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\r\n\r\n        // console.log(total)\r\n\r\n        for (let i = 0; i < total; i++) {\r\n            let $field = fields.eq(i);\r\n\r\n\r\n            if (this.#isExcluded($field)) {//判断是否被排除的字段，如果是排除的字段，直接逃过这次循环。\r\n                continue;\r\n            }\r\n\r\n            let $parent = $field.parents(group);\r\n            let $message = $field.data('bv.messages');\r\n\r\n            //直接通过属性选择器找到所有的错误信息包裹small\r\n            let $allErrors = $message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]');\r\n\r\n            //错误信息，判断验证器是否有传入，如果有传入则\r\n            let $errors = validatorName ? $allErrors.filter('[data-bv-validator=\"' + validatorName + '\"]') : $allErrors;\r\n\r\n\r\n            let $icon = $field.data('bv.icon');\r\n            let container = ('function' === typeof (this.options.fields[field].container || this.options.container)) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : (this.options.fields[field].container || this.options.container);\r\n            let isValidField = null;\r\n\r\n            // 更新状态\r\n            if (validatorName) {//如果有验证器名称，就直接更新这一个\r\n                $field.data('bv.result.' + validatorName, status);\r\n            } else {//否则更新所有的。\r\n\r\n                for (let v in this.options.fields[field].validators) {\r\n                    $field.data('bv.result.' + v, status);\r\n                }\r\n            }\r\n\r\n            // 显示/隐藏错误元素和反馈图标\r\n            $errors.attr('data-bv-result', status);\r\n\r\n            // 确定包含元素的选项卡\r\n            let $tabPane = $field.parents('.tab-pane');\r\n            let tabId;\r\n            let $tab;\r\n            if ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n                $tab = $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').parent();\r\n            }\r\n\r\n            switch (status) {\r\n                case this.STATUS_VALIDATING://如果是正在验证的状态\r\n                    isValidField = null;//清空验证字段\r\n                    //禁用提交按钮\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').removeClass('has-error');//移除成功或者错误的类\r\n                    if ($icon) {//移除成功和失败的图标，添加一个正在验证的类，并让这个icon显示\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show();\r\n                    }\r\n                    if ($tab) {//如果tab存在\r\n                        //移除所有的tab成功的类和tab失败的类\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_INVALID://如果是验证失败的。\r\n                    isValidField = false;//是否验证的改成状态为false\r\n\r\n                    //禁用提交按钮\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').addClass('has-error');//移除成功或者错误的类\r\n                    if ($icon) {//移除成功和失败的图标，添加一个正在验证的类，并让这个icon显示\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show();\r\n                    }\r\n                    if ($tab) {//移除所有的tab成功的类和tab失败的类\r\n                        $tab.removeClass('bv-tab-success').addClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_VALID:\r\n                    // 如果字段有效（通过所有验证器）\r\n                    isValidField = ($allErrors.filter('[data-bv-result=\"' + this.STATUS_NOT_VALIDATED + '\"]').length === 0)\r\n                        ? ($allErrors.filter('[data-bv-result=\"' + this.STATUS_VALID + '\"]').length === $allErrors.length)  // 所有验证器已完成\r\n                        : null;                                                                                            // 有些验证器还没有完成\r\n                    if (isValidField !== null) {\r\n                        this.disableSubmitButtons(this.$submitButton ? !this.isValid() : !isValidField);\r\n                        if ($icon) {\r\n                            $icon\r\n                                .removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid)\r\n                                .addClass(isValidField ? this.options.feedbackIcons.valid : this.options.feedbackIcons.invalid)\r\n                                .show();\r\n                        }\r\n                    }\r\n\r\n                    $parent.removeClass('has-error has-success').addClass(this.isValidContainer($parent) ? 'has-success' : 'has-error');\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error').addClass(this.isValidContainer($tabPane) ? 'bv-tab-success' : 'bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_NOT_VALIDATED:\r\n                /* falls through */\r\n                default:\r\n                    isValidField = null;\r\n                    this.disableSubmitButtons(false);\r\n                    $parent.removeClass('has-success').removeClass('has-error');\r\n                    if ($icon) {\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide();\r\n                    }\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            switch (true) {\r\n                // Only show the first error message if it is placed inside a tooltip ...\r\n                case ($icon && 'tooltip' === container):\r\n                    (isValidField === false)\r\n                        ? $icon.css('cursor', 'pointer').tooltip('destroy').tooltip({\r\n                            container: 'body',\r\n                            html: true,\r\n                            placement: 'auto top',\r\n                            title: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html()\r\n                        })\r\n                        : $icon.css('cursor', '').tooltip('destroy');\r\n                    break;\r\n                // ... or popover\r\n                case ($icon && 'popover' === container):\r\n                    (isValidField === false)\r\n                        ? $icon.css('cursor', 'pointer').popover('destroy').popover({\r\n                            container: 'body',\r\n                            content: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html(),\r\n                            html: true,\r\n                            placement: 'auto top',\r\n                            trigger: 'hover click'\r\n                        })\r\n                        : $icon.css('cursor', '').popover('destroy');\r\n                    break;\r\n                default:\r\n                    (status === this.STATUS_INVALID) ? $errors.show() : $errors.hide();\r\n                    break;\r\n            }\r\n\r\n            // Trigger an event\r\n            $field.trigger($.Event(this.options.events.fieldStatus), {\r\n                bv: this,\r\n                field: field,\r\n                element: $field,\r\n                status: status\r\n            });\r\n            this.#onFieldValidated($field, validatorName);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * 禁用/启用提交按钮\r\n     *\r\n     * @param {Boolean} disabled 可以是真的也可以是假的\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    disableSubmitButtons(disabled) {\r\n        if (!disabled) {\r\n            this.$form.find(this.options.submitButtons).removeAttr('disabled');\r\n        } else if (this.options.live !== 'disabled') {\r\n            // Don't disable if the live validating mode is disabled\r\n            this.$form.find(this.options.submitButtons).attr('disabled', 'disabled');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 获取字段选项\r\n     *\r\n     * @param {String|jQuery} [field] 字段名称或字段元素。如果未设置，该方法将返回表单选项\r\n     * @param {String} [validator] 验证器的名称。如果为null，则该方法返回表单选项\r\n     * @param {String} [option] 选项名称\r\n     * @return {String|Object}\r\n     */\r\n    getOptions(field, validator, option) {\r\n        if (!field) {\r\n            return option ? this.options[option] : this.options;\r\n        }\r\n        if ('object' === typeof field) {\r\n            field = field.attr('data-bv-field');\r\n        }\r\n        if (!this.options.fields[field]) {\r\n            return null;\r\n        }\r\n\r\n        let options = this.options.fields[field];\r\n        if (!validator) {\r\n            return option ? options[option] : options;\r\n        }\r\n        if (!options.validators || !options.validators[validator]) {\r\n            return null;\r\n        }\r\n\r\n        return option ? options.validators[validator][option] : options.validators[validator];\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证给定字段\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    validateField(field) {\r\n        let fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {\r\n            return this;\r\n        }\r\n\r\n        let that = this,\r\n            type = fields.attr('type'),\r\n            total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n            updateAll = ('radio' === type || 'checkbox' === type),\r\n            validators = this.options.fields[field].validators,\r\n            verbose = this.#isOptionEnabled(field, 'verbose'),\r\n            validatorName,\r\n            validateResult;\r\n\r\n        for (let i = 0; i < total; i++) {\r\n            let $field = fields.eq(i);\r\n            if (this.#isExcluded($field)) {\r\n                continue;\r\n            }\r\n\r\n            let stop = false;\r\n            for (validatorName in validators) {\r\n                if ($field.data('bv.dfs.' + validatorName)) {\r\n                    $field.data('bv.dfs.' + validatorName).reject();\r\n                }\r\n                if (stop) {\r\n                    break;\r\n                }\r\n\r\n                // Don't validate field if it is already done\r\n                let result = $field.data('bv.result.' + validatorName);\r\n                if (result === this.STATUS_VALID || result === this.STATUS_INVALID) {\r\n                    this.#onFieldValidated($field, validatorName);\r\n                    continue;\r\n                } else if (validators[validatorName].enabled === false) {\r\n                    this.updateStatus(updateAll ? field : $field, this.STATUS_VALID, validatorName);\r\n                    continue;\r\n                }\r\n\r\n                $field.data('bv.result.' + validatorName, this.STATUS_VALIDATING);\r\n                validateResult = $.fn.bootstrapValidation.validators[validatorName].validate(this, $field, validators[validatorName]);\r\n\r\n                // validateResult can be a $.Deferred object ...\r\n                if ('object' === typeof validateResult && validateResult.resolve) {\r\n                    this.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);\r\n                    $field.data('bv.dfs.' + validatorName, validateResult);\r\n\r\n                    validateResult.done(function ($f, v, response) {\r\n                        // v is validator name\r\n                        $f.removeData('bv.dfs.' + v).data('bv.response.' + v, response);\r\n                        if (response.message) {\r\n                            that.updateMessage($f, v, response.message);\r\n                        }\r\n\r\n                        that.updateStatus(updateAll ? $f.attr('data-bv-field') : $f, response.valid ? that.STATUS_VALID : that.STATUS_INVALID, v);\r\n\r\n                        if (response.valid && that.#submitIfValid === true) {\r\n                            // If a remote validator returns true and the form is ready to submit, then do it\r\n                            that._submit();\r\n                        } else if (!response.valid && !verbose) {\r\n                            stop = true;\r\n                        }\r\n                    });\r\n                }\r\n                // ... or object { valid: true/false, message: 'dynamic message' }\r\n                else if ('object' === typeof validateResult && validateResult.valid !== undefined && validateResult.message !== undefined) {\r\n                    $field.data('bv.response.' + validatorName, validateResult);\r\n                    this.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);\r\n                    this.updateStatus(updateAll ? field : $field, validateResult.valid ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n                    if (!validateResult.valid && !verbose) {\r\n                        break;\r\n                    }\r\n                }\r\n                // ... or a boolean value\r\n                else if ('boolean' === typeof validateResult) {\r\n                    $field.data('bv.response.' + validatorName, validateResult);\r\n                    this.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n                    if (!validateResult && !verbose) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查给定容器中的所有字段是否有效。\r\n     * 当使用诸如选项卡、折叠之类的向导时，它很有用\r\n     *\r\n     * @param {String|jQuery} container 容器选择器或元素\r\n     * @returns {Boolean}\r\n     */\r\n    isValidContainer(container) {\r\n        let that = this,\r\n            map = {},\r\n            $container = ('string' === typeof container) ? $(container) : container;\r\n        if ($container.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        $container.find('[data-bv-field]').each(function () {\r\n            let $field = $(this),\r\n                field = $field.attr('data-bv-field');\r\n            if (!that.#isExcluded($field) && !map[field]) {\r\n                map[field] = $field;\r\n            }\r\n        });\r\n\r\n        for (let field in map) {\r\n            let $f = map[field];\r\n            if ($f.data('bv.messages')\r\n                .find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]')\r\n                .filter('[data-bv-result=\"' + this.STATUS_INVALID + '\"]')\r\n                .length > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新错误消息\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @param {String} validator 验证器名称\r\n     * @param {String} message 消息\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    updateMessage(field, validator, message) {\r\n        let $fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                $fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                $fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        $fields.each(function () {\r\n            $(this).data('bv.messages').find('.help-block[data-bv-validator=\"' + validator + '\"][data-bv-for=\"' + field + '\"]').html(message);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证表单\r\n     *\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    validate() {\r\n        if (!this.options.fields) {\r\n            return this;\r\n        }\r\n        this.disableSubmitButtons(true);\r\n\r\n        this.#submitIfValid = false;\r\n        for (let field in this.options.fields) {\r\n            this.validateField(field);\r\n        }\r\n\r\n        this._submit();\r\n        this.#submitIfValid = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在完成所有验证时调用\r\n     */\r\n    _submit() {\r\n        let isValid = this.isValid(),\r\n            eventType = isValid ? this.options.events.formSuccess : this.options.events.formError,\r\n            e = $.Event(eventType);\r\n\r\n        this.$form.trigger(e);\r\n\r\n        // Call default handler\r\n        // Check if whether the submit button is clicked\r\n        if (this.$submitButton) {\r\n            isValid ? this.#onSuccess(e) : this.#onError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查表格有效性\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isValid() {\r\n        for (let field in this.options.fields) {\r\n            if (!this.isValidField(field)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 检查字段是否有效\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    isValidField(field) {\r\n        let fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {\r\n            return true;\r\n        }\r\n\r\n        let type = fields.attr('type'),\r\n            total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n            $field, validatorName, status;\r\n        for (let i = 0; i < total; i++) {\r\n            $field = fields.eq(i);\r\n            if (this.#isExcluded($field)) {\r\n                continue;\r\n            }\r\n            for (validatorName in this.options.fields[field].validators) {\r\n                if (this.options.fields[field].validators[validatorName].enabled === false) {\r\n                    continue;\r\n                }\r\n                status = $field.data('bv.result.' + validatorName);\r\n                if (status !== this.STATUS_VALID) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * error.form.bv事件的默认处理程序。\r\n     * 当存在无效字段时将调用它\r\n     *\r\n     * @param {jQuery.Event} e jquery的事件对象\r\n     */\r\n    #onError(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return;\r\n        }\r\n\r\n        if ('submitted' === this.options.live) {\r\n            // Enable live mode\r\n            this.options.live = 'enabled';\r\n            let that = this;\r\n            for (let field in this.options.fields) {\r\n                (function (f) {\r\n                    let fields = that.getFieldElements(f);\r\n                    if (fields.length) {\r\n                        let type = $(fields[0]).attr('type'),\r\n                            event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === $(fields[0]).get(0).tagName) ? 'change' : that.#changeEvent,\r\n                            trigger = that.options.fields[field].trigger || that.options.trigger || event,\r\n                            events = $.map(trigger.split(' '), function (item) {\r\n                                return item + '.live.bv';\r\n                            }).join(' ');\r\n\r\n                        fields.off(events).on(events, function () {\r\n                            if (that.#exceedThreshold($(this))) {\r\n                                that.validateField($(this));\r\n                            }\r\n                        });\r\n                    }\r\n                })(field);\r\n            }\r\n        }\r\n\r\n        // Determined the first invalid field which will be focused on automatically\r\n        for (let i = 0; i < this.$invalidFields.length; i++) {\r\n            let $field = this.$invalidFields.eq(i),\r\n                autoFocus = this.#isOptionEnabled($field.attr('data-bv-field'), 'autoFocus');\r\n            if (autoFocus) {\r\n                // Activate the tab containing the field if exists\r\n                let $tabPane = $field.parents('.tab-pane'), tabId;\r\n                if ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n                    $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').tab('show');\r\n                }\r\n\r\n                // Focus the field\r\n                $field.focus();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * success.form.bv事件的默认处理程序。\r\n     * 当所有字段都有效时，将调用它\r\n     *\r\n     * @param {jQuery.Event} e jquery的事件对象\r\n     */\r\n    #onSuccess(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return;\r\n        }\r\n\r\n        // 让按钮被禁用\r\n        this.disableSubmitButtons(true);\r\n\r\n        // 使用默认的提交方式提交\r\n        this.defaultSubmit();\r\n    }\r\n\r\n\r\n    /**\r\n     * 使用默认提交方式提交表单。\r\n     * 它在提交表单时也不执行任何验证\r\n     */\r\n    defaultSubmit() {\r\n        if (this.$submitButton) {\r\n            // Create hidden input to send the submit buttons\r\n            $('<input/>')\r\n                .attr('type', 'hidden')\r\n                .attr('data-bv-submit-hidden', '')\r\n                .attr('name', this.$submitButton.attr('name'))\r\n                .val(this.$submitButton.val())\r\n                .appendTo(this.$form);\r\n        }\r\n\r\n        // Submit form\r\n        this.$form.off('submit.bv').submit();\r\n    }\r\n\r\n}\r\n\r\n\r\nBootstrapValidation.VERSION = Constants.VERSION\r\nBootstrapValidation.DEFAULTS = Constants.DEFAULTS\r\n\r\n\r\n/**\r\n * jQuery API\r\n * ====================================================\r\n */\r\n$.fn[NAME] = function (option) {\r\n    //获取参数\r\n    let params = arguments;\r\n    return this.each(function () {\r\n\r\n        let $this = $(this);\r\n        let data = $this.data('bootstrapValidation');\r\n\r\n        //选项合并\r\n        let options = $.extend({}, $.fn.bootstrapValidation.defaults, 'object' === typeof option && option);\r\n\r\n        if (!data) {\r\n            data = new BootstrapValidation(this, options);\r\n            $this.data('bootstrapValidation', data);\r\n        }\r\n\r\n        if ('string' === typeof option) {\r\n            if (typeof data[option] !== 'function') {\r\n                throw new Error(`Unknown method: ${option}`);\r\n            }\r\n            data[option].apply(data, Array.prototype.slice.call(params, 1));\r\n        }\r\n    });\r\n};\r\n$.fn[NAME].Constructor = BootstrapValidation;\r\n$.fn[NAME].VERSION = Constants.VERSION\r\n$.fn[NAME].defaults = BootstrapValidation.DEFAULTS\r\n$.fn[NAME].validators = Rules;\r\n$.fn[NAME].i18n = {};\r\n$.fn[NAME].utils = Utils\r\n\r\n\r\n\r\n\r\n\r\nexport default BootstrapValidation;\r\n"],"names":["VERSION","DEFAULTS","autoFocus","container","elementClass","events","formInit","formError","formSuccess","fieldAdded","fieldRemoved","fieldInit","fieldError","fieldSuccess","fieldStatus","validatorError","validatorSuccess","excluded","feedbackIcons","valid","invalid","validating","fields","group","live","message","submitButtons","threshold","verbose","call","functionName","args","apply","substring","length","ns","split","func","pop","context","window","i","format","parameters","$","isArray","replace","date","year","month","day","notInFuture","isNaN","parseInt","numDays","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","luhn","value","mul","prodArr","sum","charAt","mod11And10","check","mod37And36","alphabet","modulus","Math","floor","indexOf","enableByHtml5","$field","required","attr","validate","validator","options","console","log","type","getFieldElements","filter","get","validity","badInput","trim","val","html5Attributes","min","max","utf8bytes","maxLength","minLength","isEmptyObject","isNumeric","getDynamicOption","utf8Length","str","s","code","charCodeAt","utf8Bytes","isValid","fn","bootstrapValidation","i18n","stringLength","Utils","between","more","less","notEmpty","NAME","BootstrapValidation","constructor","el","$form","$invalidFields","$submitButton","$hiddenButton","STATUS_NOT_VALIDATED","STATUS_VALIDATING","STATUS_INVALID","STATUS_VALID","#init","that","onError","onSuccess","trigger","addClass","on","e","preventDefault","find","each","field","opts","extend","prependTo","css","display","width","height","isDefaultPrevented","$target","target","$button","is","eq","parent","off","submit","Event","bv","#parseOptions2","validators","v","attrName","toLowerCase","enabled","html5AttrMap","onerror","onsuccess","html5AttrName","optionName","optionAttrName","optionValue","onStatus","selector","emptyOptions","emptyValidators","#initField","Object","keys","forEach","validatorName","total","updateAll","event","tagName","map","item","join","index","fieldElement","$parent","parents","$message","remove","updateStatus","data","html","appendTo","init","$icon","insertAfter","$fieldParent","hasClass","tooltip","popover","getOptions","validateField","element","#getMessageContainer","cssClasses","n","test","#getMessage","#isExcluded","excludedAttr","#onFieldValidated","counter","numValidators","result","not","add","#isOptionEnabled","option","#exceedThreshold","cannotType","inArray","status","$allErrors","$errors","isValidField","$tabPane","tabId","$tab","disableSubmitButtons","removeClass","show","isValidContainer","hide","placement","title","content","disabled","removeAttr","validateResult","stop","reject","resolve","done","$f","response","removeData","updateMessage","_submit","undefined","$container","$fields","eventType","#onError","f","tab","focus","#onSuccess","defaultSubmit","Constants","params","arguments","$this","defaults","Error","Array","prototype","slice","Constructor","Rules","utils"],"mappings":"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"}