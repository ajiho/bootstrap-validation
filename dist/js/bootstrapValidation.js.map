{"version":3,"file":"bootstrapValidation.js","sources":["../../src/constants/index.js","../../src/utils/index.js","../../src/rules/notEmpty.js","../../src/rules/stringLength.js","../../src/rules/index.js","../../src/bootstrap-validation.js"],"sourcesContent":["// 版本号\r\nconst VERSION = '0.5.3'\r\n\r\n//默认选项\r\nconst DEFAULTS = {\r\n    // 第一个无效字段将自动聚焦\r\n    autoFocus: true,\r\n\r\n    //错误消息容器。可以是:\r\n    // - 'tooltip' 如果要使用引导工具提示显示错误消息\r\n    // - 'popover' 如果要使用引导弹出窗口显示错误消息\r\n    // - css选择器指定的容器\r\n    // 在前两种情况下，由于工具提示/popover应该足够小，因此插件只显示一条错误消息\r\n    // 您还可以为特定字段定义消息容器\r\n    container: null,\r\n\r\n    // 表单CSS类\r\n    elementClass: 'bv-form',\r\n\r\n    // 使用自定义事件名称以避免jQuery调用window.onerror\r\n    // See https://github.com/nghuuphuoc/bootstrapvalidator/issues/630\r\n    events: {\r\n        formInit: 'init.form.bv',\r\n        formError: 'error.form.bv',\r\n        formSuccess: 'success.form.bv',\r\n        fieldAdded: 'added.field.bv',\r\n        fieldRemoved: 'removed.field.bv',\r\n        fieldInit: 'init.field.bv',\r\n        fieldError: 'error.field.bv',\r\n        fieldSuccess: 'success.field.bv',\r\n        fieldStatus: 'status.field.bv',\r\n        validatorError: 'error.validator.bv',\r\n        validatorSuccess: 'success.validator.bv'\r\n    },\r\n\r\n    // 指示将不被验证的字段\r\n    excluded: [':disabled', ':hidden', ':not(:visible)'],\r\n    //反馈图标\r\n    feedbackIcons: {\r\n        valid: null,\r\n        invalid: null,\r\n        validating: null\r\n    },\r\n\r\n    // 使用验证器规则映射字段名称\r\n    fields: null,\r\n\r\n    // 用于指示元素的CSS选择器由字段组成\r\n    // 默认情况下，每个字段都放置在<div class=“form group”></div>中\r\n    // 如果您的表单组包含许多字段，但并非所有字段都需要验证，则应调整此选项\r\n    group: '.form-group',\r\n\r\n    // 实时验证选项\r\n    // 可以是3个值之一:\r\n    // - enabled: 该插件在字段更改后立即验证字段\r\n    // - disabled: 禁用实时验证。只有在提交表单后才会显示错误消息\r\n    // - submitted: 表单提交后启用实时验证\r\n    live: 'enabled',\r\n\r\n    // 默认无效消息\r\n    message: 'This value is not valid',\r\n\r\n    // 提交按钮选择器\r\n    // 这些按钮将被禁用，以防止有效表单多次提交\r\n    submitButtons: '[type=\"submit\"]',\r\n\r\n    // 如果字段长度小于此字符数，则不会对其进行实时验证\r\n    threshold: null,\r\n\r\n    // 验证字段时是否详细.\r\n    // 可能值:\r\n    // - true:  当一个字段有多个验证器时，将分别检查所有验证器，如果多个验证器中出现错误，则将向用户显示所有验证器\r\n    // - false: 当一个字段有多个验证器时，该字段的验证将在第一次遇到错误时终止。因此，只有与该字段相关的第一条错误消息才会显示给用户\r\n    verbose: true\r\n};\r\nexport default {\r\n    VERSION,\r\n    DEFAULTS,\r\n}\r\n","export default {\r\n\r\n    /**\r\n     * 执行回调函数\r\n     *\r\n     * @param {String|Function} functionName Can be\r\n     * - 全局函数的名称\r\n     * - 命名空间函数的名称（如A.B.C）\r\n     * - 函数\r\n     * @param {Array} args 回调参数\r\n     */\r\n    call(functionName, args) {\r\n        if ('function' === typeof functionName) {\r\n            return functionName.apply(this, args);\r\n        } else if ('string' === typeof functionName) {\r\n            if ('()' === functionName.substring(functionName.length - 2)) {\r\n                functionName = functionName.substring(0, functionName.length - 2);\r\n            }\r\n            let ns = functionName.split('.'),\r\n                func = ns.pop(),\r\n                context = window;\r\n            for (let i = 0; i < ns.length; i++) {\r\n                context = context[ns[i]];\r\n            }\r\n            return (typeof context[func] === 'undefined') ? null : context[func].apply(this, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置字符串格式\r\n     * 它用于格式化错误消息\r\n     * format（“字段必须介于%s和%s之间”，[10，20]）=“字段必须在10和20之间”\r\n     *\r\n     * @param {String} message\r\n     * @param {Array} parameters\r\n     * @returns {String}\r\n     */\r\n    format(message, parameters) {\r\n        if (!$.isArray(parameters)) {\r\n            parameters = [parameters];\r\n        }\r\n\r\n        for (let i in parameters) {\r\n            message = message.replace('%s', parameters[i]);\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /**\r\n     * 验证日期\r\n     *\r\n     * @param {Number} year 4位数的全年\r\n     * @param {Number} month 月份编号\r\n     * @param {Number} day 日期编号\r\n     * @param {Boolean} [notInFuture] 如果为true，则日期不得在将来\r\n     * @returns {Boolean}\r\n     */\r\n    date(year, month, day, notInFuture) {\r\n        if (isNaN(year) || isNaN(month) || isNaN(day)) {\r\n            return false;\r\n        }\r\n        if (day.length > 2 || month.length > 2 || year.length > 4) {\r\n            return false;\r\n        }\r\n\r\n        day = parseInt(day, 10);\r\n        month = parseInt(month, 10);\r\n        year = parseInt(year, 10);\r\n\r\n        if (year < 1000 || year > 9999 || month <= 0 || month > 12) {\r\n            return false;\r\n        }\r\n        let numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        // Update the number of days in Feb of leap year\r\n        if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n            numDays[1] = 29;\r\n        }\r\n\r\n        // Check the day\r\n        if (day <= 0 || day > numDays[month - 1]) {\r\n            return false;\r\n        }\r\n\r\n        if (notInFuture === true) {\r\n            let currentDate = new Date(),\r\n                currentYear = currentDate.getFullYear(),\r\n                currentMonth = currentDate.getMonth(),\r\n                currentDay = currentDate.getDate();\r\n            return (year < currentYear\r\n                || (year === currentYear && month - 1 < currentMonth)\r\n                || (year === currentYear && month - 1 === currentMonth && day < currentDay));\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * 实现Luhn验证算法\r\n     * Credit to https://gist.github.com/ShirtlessKirk/2134376\r\n     *\r\n     * @see http://en.wikipedia.org/wiki/Luhn\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    luhn(value) {\r\n        let length = value.length,\r\n            mul = 0,\r\n            prodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\r\n            sum = 0;\r\n\r\n        while (length--) {\r\n            sum += prodArr[mul][parseInt(value.charAt(length), 10)];\r\n            mul ^= 1;\r\n        }\r\n\r\n        return (sum % 10 === 0 && sum > 0);\r\n    },\r\n\r\n    /**\r\n     * 实现模数11，10（ISO 7064）算法\r\n     *\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    mod11And10(value) {\r\n        let check = 5,\r\n            length = value.length;\r\n        for (let i = 0; i < length; i++) {\r\n            check = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;\r\n        }\r\n        return (check === 1);\r\n    },\r\n\r\n    /**\r\n     * 实施Mod 37、36（ISO 7064）算法\r\n     * Usages:\r\n     * mod37And36('A12425GABC1234002M')\r\n     * mod37And36('002006673085', '0123456789')\r\n     *\r\n     * @param {String} value\r\n     * @param {String} [alphabet]\r\n     * @returns {Boolean}\r\n     */\r\n    mod37And36(value, alphabet) {\r\n        alphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        let modulus = alphabet.length,\r\n            length = value.length,\r\n            check = Math.floor(modulus / 2);\r\n        for (let i = 0; i < length; i++) {\r\n            check = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;\r\n        }\r\n        return (check === 1);\r\n    }\r\n\r\n}\r\n","export default {\r\n\r\n    enableByHtml5($field) {\r\n        let required = $field.attr('required') + '';\r\n        return ('required' === required || 'true' === required);\r\n    },\r\n\r\n    /**\r\n     * Check if input value is empty or not\r\n     *\r\n     * @param {BootstrapValidator} validator The validator plugin instance\r\n     * @param {jQuery} $field Field element\r\n     * @param {Object} options\r\n     * @returns {Boolean}\r\n     */\r\n    validate(validator, $field, options) {\r\n        console.log(options)\r\n        let type = $field.attr('type');\r\n        if ('radio' === type || 'checkbox' === type) {\r\n            return validator\r\n                .getFieldElements($field.attr('data-bv-field'))\r\n                .filter(':checked')\r\n                .length > 0;\r\n        }\r\n\r\n        if ('number' === type && $field.get(0).validity && $field.get(0).validity.badInput === true) {\r\n            return true;\r\n        }\r\n\r\n        return $.trim($field.val()) !== '';\r\n    }\r\n}\r\n","import Utils from \"../utils\";\r\n\r\nexport default {\r\n    html5Attributes: {\r\n        message: 'message',\r\n        min: 'min',\r\n        max: 'max',\r\n        trim: 'trim',\r\n        utf8bytes: 'utf8Bytes'\r\n    },\r\n\r\n    enableByHtml5: function ($field) {\r\n        let options = {},\r\n            maxLength = $field.attr('maxlength'),\r\n            minLength = $field.attr('minlength');\r\n        if (maxLength) {\r\n            options.max = parseInt(maxLength, 10);\r\n        }\r\n        if (minLength) {\r\n            options.min = parseInt(minLength, 10);\r\n        }\r\n\r\n        return $.isEmptyObject(options) ? false : options;\r\n    },\r\n\r\n    /**\r\n     * Check if the length of element value is less or more than given number\r\n     *\r\n     * @param {BootstrapValidator} validator The validator plugin instance\r\n     * @param {jQuery} $field Field element\r\n     * @param {Object} options Consists of following keys:\r\n     * - min\r\n     * - max\r\n     * At least one of two keys is required\r\n     * The min, max keys define the number which the field value compares to. min, max can be\r\n     *      - A number\r\n     *      - Name of field which its value defines the number\r\n     *      - Name of callback function that returns the number\r\n     *      - A callback function that returns the number\r\n     *\r\n     * - message: The invalid message\r\n     * - trim: Indicate the length will be calculated after trimming the value or not. It is false, by default\r\n     * - utf8bytes: Evaluate string length in UTF-8 bytes, default to false\r\n     * @returns {Object}\r\n     */\r\n    validate: function (validator, $field, options) {\r\n        let value = $field.val();\r\n        if (options.trim === true || options.trim === 'true') {\r\n            value = $.trim(value);\r\n        }\r\n\r\n        if (value === '') {\r\n            return true;\r\n        }\r\n\r\n        let min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min),\r\n            max = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max),\r\n            // Credit to http://stackoverflow.com/a/23329386 (@lovasoa) for UTF-8 byte length code\r\n            utf8Length = function (str) {\r\n                let s = str.length;\r\n                for (let i = str.length - 1; i >= 0; i--) {\r\n                    let code = str.charCodeAt(i);\r\n                    if (code > 0x7f && code <= 0x7ff) {\r\n                        s++;\r\n                    } else if (code > 0x7ff && code <= 0xffff) {\r\n                        s += 2;\r\n                    }\r\n                    if (code >= 0xDC00 && code <= 0xDFFF) {\r\n                        i--;\r\n                    }\r\n                }\r\n                return s;\r\n            },\r\n            length = options.utf8Bytes ? utf8Length(value) : value.length,\r\n            isValid = true,\r\n            message = options.message || $.fn.bootstrapValidation.i18n.stringLength['default'];\r\n\r\n        if ((min && length < parseInt(min, 10)) || (max && length > parseInt(max, 10))) {\r\n            isValid = false;\r\n        }\r\n\r\n        switch (true) {\r\n            case (!!min && !!max):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.between, [parseInt(min, 10), parseInt(max, 10)]);\r\n                break;\r\n\r\n            case (!!min):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.more, parseInt(min, 10));\r\n                break;\r\n\r\n            case (!!max):\r\n                message = Utils.format(options.message || $.fn.bootstrapValidation.i18n.stringLength.less, parseInt(max, 10));\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return {valid: isValid, message: message};\r\n    }\r\n}\r\n","\r\nimport notEmpty from \"./notEmpty\";\r\nimport stringLength from \"./stringLength\";\r\n\r\nexport default {\r\n    notEmpty,\r\n    stringLength\r\n}\r\n","import $ from 'jquery'\r\nimport Constants from \"./constants\";\r\nimport Utils from \"./utils\";\r\nimport Rules from \"./rules\";\r\n\r\n\r\nclass BootstrapValidation {\r\n    constructor(el, options) {\r\n        this.options = options\r\n        this.$form = $(el)\r\n\r\n        //无效字段\r\n        this.$invalidFields = $([]);    // 无效字段数组\r\n\r\n        //提交按钮\r\n        this.$submitButton = null;     // 单击以提交表单的提交按钮\r\n        // 隐藏按钮\r\n        this.$hiddenButton = null;\r\n\r\n        // 没有验证的\r\n        this.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';\r\n        // 验证中\r\n        this.STATUS_VALIDATING = 'VALIDATING';\r\n        // 验证无效的\r\n        this.STATUS_INVALID = 'INVALID';\r\n        // 验证通过的\r\n        this.STATUS_VALID = 'VALID';\r\n\r\n        // 确定用户更改字段值时激发的事件\r\n        this._changeEvent = 'input';\r\n\r\n        // 当远程/回调验证器返回时，指示表单已准备好提交的标志\r\n        this._submitIfValid = null;\r\n\r\n        // 缓存的字段元素\r\n        this._cacheFields = {};\r\n\r\n        //调用初始化方法\r\n        this._init();\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化表单\r\n     */\r\n    _init() {\r\n\r\n        //that是当前实例,这里取出来是避免下面在各种匿名函数中混淆this指向\r\n\r\n        let that = this;\r\n\r\n        //默认的选项\r\n        let options = {\r\n            autoFocus: this.$form.attr('data-bv-autofocus'),\r\n            //指示错误信息的css选择器\r\n            container: this.$form.attr('data-bv-container'),\r\n            //事件从属性里读取一遍。\r\n            events: {\r\n                formInit: this.$form.attr('data-bv-events-form-init'),\r\n                formError: this.$form.attr('data-bv-events-form-error'),\r\n                formSuccess: this.$form.attr('data-bv-events-form-success'),\r\n                fieldAdded: this.$form.attr('data-bv-events-field-added'),\r\n                fieldRemoved: this.$form.attr('data-bv-events-field-removed'),\r\n                fieldInit: this.$form.attr('data-bv-events-field-init'),\r\n                fieldError: this.$form.attr('data-bv-events-field-error'),\r\n                fieldSuccess: this.$form.attr('data-bv-events-field-success'),\r\n                fieldStatus: this.$form.attr('data-bv-events-field-status'),\r\n                validatorError: this.$form.attr('data-bv-events-validator-error'),\r\n                validatorSuccess: this.$form.attr('data-bv-events-validator-success')\r\n            },\r\n            //排除验证的字段\r\n            excluded: this.$form.attr('data-bv-excluded'),\r\n            feedbackIcons: {\r\n                valid: this.$form.attr('data-bv-feedbackicons-valid'),\r\n                invalid: this.$form.attr('data-bv-feedbackicons-invalid'),\r\n                validating: this.$form.attr('data-bv-feedbackicons-validating')\r\n            },\r\n            group: this.$form.attr('data-bv-group'),\r\n            live: this.$form.attr('data-bv-live'),\r\n            message: this.$form.attr('data-bv-message'),\r\n            //错误\r\n            onError: this.$form.attr('data-bv-onerror'),\r\n            onSuccess: this.$form.attr('data-bv-onsuccess'),\r\n            //提交的按钮\r\n            submitButtons: this.$form.attr('data-bv-submitbuttons'),\r\n            threshold: this.$form.attr('data-bv-threshold'),\r\n            trigger: this.$form.attr('data-bv-trigger'),\r\n            verbose: this.$form.attr('data-bv-verbose'),\r\n            //验证的字段。\r\n            fields: {}\r\n        };\r\n\r\n        this.$form\r\n            // 禁用HTML 5中的客户端验证\r\n            .attr('novalidate', 'novalidate')\r\n            // 给表单添加了一个class '.bv-form'\r\n            .addClass(this.options.elementClass)\r\n            // 监听表单的提交事件，submit.bv 实际上就是等于 submit事件，只是这里给它加了一个命名空间.bv\r\n            .on('submit.bv', function (e) {\r\n                e.preventDefault();//首先禁用默认提交事件\r\n                that.validate();//调用验证的方法\r\n            })\r\n            //事件委托给 提交按钮 绑定一个点击事件\r\n            .on('click.bv', this.options.submitButtons, function () {\r\n\r\n                //得到 $submitButton\r\n                that.$submitButton = $(this);\r\n                // 用户点击提交按钮后，让提交有效标志设置为真\r\n                that._submitIfValid = true;\r\n\r\n\r\n            })\r\n            // 查找具有name或data-bv-field属性的所有字段(就是每个表单元素，比如 input等、select等)\r\n            .find('[name], [data-bv-field]')\r\n            //遍历操作\r\n            .each(function () {\r\n                //得到表单字段元素的jquery对象\r\n                let $field = $(this);\r\n                //这里是得到所有的字段名称，分别从name或者data-bv-field读取\r\n                let field = $field.attr('name') || $field.attr('data-bv-field');\r\n                //调用方法，从HTML属性分析验证器选项\r\n                let opts = that._parseOptions2($field);\r\n\r\n                if (opts) {\r\n                    //给每个表单字段元素设置data-bv-field=\"xxxx\"\r\n                    //例子<input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\" data-bv-field=\"email\">\r\n                    $field.attr('data-bv-field', field);\r\n                    //只合并到options.fields 这个对象选项上，其它的选项是不会动的\r\n                    options.fields[field] = $.extend({}, opts, options.fields[field]);\r\n                }\r\n            });\r\n\r\n\r\n        //合并大选项(到这里已经包括了field字段，但这里仅仅是只有field)\r\n        this.options = $.extend(true, this.options, options);\r\n\r\n        console.log('这里已经合并了默认选项，和插件初始化时传递过来的所有选项')\r\n        console.log(this.options)\r\n\r\n\r\n        // 当在表单中的任何字段上按Enter键时，第一个提交按钮将完成其工作\r\n        // 然后表单将会提交\r\n        // 我创建了第一个隐藏的提交按钮\r\n        this.$hiddenButton = $('<button/>')\r\n            .attr('type', 'submit')\r\n            .prependTo(this.$form)\r\n            .addClass('bv-hidden-submit')\r\n            .css({display: 'none', width: 0, height: 0});\r\n\r\n        //再次通过事件委托的方式监听提交按钮被点击后触发事件。\r\n        this.$form\r\n            .on('click.bv', '[type=\"submit\"]', function (e) {\r\n\r\n\r\n                //e.isDefaultPrevented() 用来判断 用于检测事件是否已经调用 event.preventDefault() 阻止了默认行为。如果事件调用了 event.preventDefault() 方法，则 e.isDefaultPrevented() 返回 true，否则返回 false\r\n                // e.isDefaultPrevented() 可以用来判断是否执行了默认行为的阻止操作\r\n                // #746: 检查按钮单击处理程序是否返回false\r\n                if (!e.isDefaultPrevented()) {//没有阻止默认事件，因为如果用户自己阻止了默认提交事件，我们这里就不能强制让它手动提交了。\r\n                    // console.log('!isDefaultPrevented()')\r\n                    let $target = $(e.target);\r\n                    // 按钮可能包含HTML标记，比如按钮内部或者外部有其它的html包裹，所以需要我们判断一下。\r\n                    let $button = $target.is('[type=\"submit\"]') ? $target.eq(0) : $target.parent('[type=\"submit\"]').eq(0);\r\n\r\n                    // 单击提交按钮/输入时不执行验证\r\n                    // 判断该按钮不是submitButtons定义的且也不是我们自己生成的hiddenButton\r\n                    if (that.options.submitButtons && !$button.is(that.options.submitButtons) && !$button.is(that.$hiddenButton)) {\r\n                        that.$form.off('submit.bv').submit();//模拟表单提交然后移除掉自定义绑定的事件\r\n                    }\r\n                }\r\n            });\r\n\r\n        //循环初始化每个字段\r\n        for (const field in this.options.fields) {\r\n            //初始化字段\r\n            this._initField(field);\r\n        }\r\n\r\n        //触发表单初始化完成事件\r\n        // console.log(this.options.events.formInit)\r\n        this.$form.trigger($.Event(this.options.events.formInit), {\r\n            bv: this,\r\n            options: this.options\r\n        });\r\n\r\n        // 准备事件\r\n        if (this.options.onSuccess) {\r\n            this.$form.on(this.options.events.formSuccess, function (e) {\r\n                Utils.call(that.options.onSuccess, [e]);\r\n            });\r\n        }\r\n        if (this.options.onError) {\r\n            this.$form.on(this.options.events.formError, function (e) {\r\n                Utils.call(that.options.onError, [e]);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 从HTML属性分析验证器选项\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Object}\r\n     */\r\n    _parseOptions2($field) {\r\n        const field = $field.attr('name') || $field.attr('data-bv-field');\r\n        let validators = {};\r\n        let validator;\r\n\r\n        for (const v in $.fn.bootstrapValidation.validators) {\r\n            validator = $.fn.bootstrapValidation.validators[v];\r\n            const attrName = `data-bv-${v.toLowerCase()}`;\r\n            let enabled = $field.attr(attrName) + '';\r\n            const html5AttrMap = typeof validator.enableByHtml5 === 'function' ? validator.enableByHtml5($field) : null;\r\n\r\n            if ((html5AttrMap && enabled !== 'false') || (html5AttrMap !== true && (enabled === '' || enabled === 'true' || attrName === enabled.toLowerCase()))) {\r\n                validator.html5Attributes = {\r\n                    message: 'message',\r\n                    onerror: 'onError',\r\n                    onsuccess: 'onSuccess'\r\n                };\r\n                validators[v] = html5AttrMap === true ? {} : html5AttrMap;\r\n\r\n                for (const html5AttrName in validator.html5Attributes) {\r\n                    const optionName = validator.html5Attributes[html5AttrName];\r\n                    const optionAttrName = `data-bv-${v.toLowerCase()}-${html5AttrName}`;\r\n                    const optionValue = $field.attr(optionAttrName);\r\n\r\n                    if (optionValue) {\r\n                        validators[v][optionName] = optionValue === 'true' || optionAttrName === optionValue.toLowerCase();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const opts = {\r\n            autoFocus: $field.attr('data-bv-autofocus'),\r\n            container: $field.attr('data-bv-container'),\r\n            excluded: $field.attr('data-bv-excluded'),\r\n            feedbackIcons: $field.attr('data-bv-feedbackicons'),\r\n            group: $field.attr('data-bv-group'),\r\n            message: $field.attr('data-bv-message'),\r\n            onError: $field.attr('data-bv-onerror'),\r\n            onStatus: $field.attr('data-bv-onstatus'),\r\n            onSuccess: $field.attr('data-bv-onsuccess'),\r\n            selector: $field.attr('data-bv-selector'),\r\n            threshold: $field.attr('data-bv-threshold'),\r\n            trigger: $field.attr('data-bv-trigger'),\r\n            verbose: $field.attr('data-bv-verbose'),\r\n            validators\r\n        };\r\n\r\n        const emptyOptions = $.isEmptyObject(opts);\r\n        const emptyValidators = $.isEmptyObject(validators);\r\n\r\n        if (!emptyValidators || (!emptyOptions && this.options.fields && this.options.fields[field])) {\r\n            opts.validators = validators;\r\n\r\n            return opts;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Init字段\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     */\r\n    _initField(field) {\r\n        //创建一个空的 jQuery 集合，用于存储和管理元素\r\n        let fields = $([]);\r\n\r\n        // console.log(fields)\r\n\r\n        // console.log(typeof field)\r\n        switch (typeof field) {\r\n            case 'object': //如果传递过来的直接是一个字段元素就直接给fields赋值\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                //根据字段名称或者字段元素,并赋值给上面定义的 fields\r\n                fields = this.getFieldElements(field);\r\n                // console.log(fields)\r\n                // console.log(fields);\r\n                fields.attr('data-bv-field', field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // 我们不需要验证不存在的字段\r\n        if (fields.length === 0 || this.options.fields[field] === null || this.options.fields[field].validators === null) {\r\n            return;\r\n        }\r\n\r\n\r\n        //$.fn.bootstrapValidatio.validators :这里是取对象上所有已经被注册的验证器对象集合\r\n        // console.log($.fn.bootstrapValidatio.validators)\r\n        //Object.keys(this.options.fields[field].validators) 得到的是对象的key值组成的数组，这里得到的是验证器名称数组\r\n        // 这里的作用是把传递进来的每个字段的验证器过滤一下，只保留bootstrapValidator.validators上真正存在的验证器\r\n        Object.keys(this.options.fields[field].validators).forEach(validatorName => {\r\n            if (!$.fn.bootstrapValidation.validators[validatorName]) {\r\n                delete this.options.fields[field].validators[validatorName];\r\n            }\r\n        });\r\n\r\n\r\n        //this.options.fields[field].enabled 可是这里会等于undefined,估计是作者的bug\r\n        if (this.options.fields[field].enabled === null) {//判断每个字段上对象上的enabled是否等于null，等于null则设定为true\r\n            console.log('into');\r\n            this.options.fields[field].enabled = true;\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        //字段元素的长度\r\n        let total = fields.length;\r\n\r\n\r\n        //获取类型，可能是 text radio checkbox\r\n        let type = fields.attr('type');\r\n\r\n\r\n        // 判断字段元素类型为radio或者checkbox\r\n        let updateAll = (total === 1) || ('radio' === type) || ('checkbox' === type);//这里目前是永远都等于true\r\n\r\n\r\n        // 事件类型判断，如果是字段元素是 radio checkbox file SELECT 则用change事件，否则就调用 this._changeEvent\r\n        let event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === fields.eq(0).get(0).tagName) ? 'change' : this._changeEvent;\r\n        //得到字段上的 trigger字符串数组 ,['input']\r\n        let trigger = (this.options.fields[field].trigger || this.options.trigger || event).split(' ');\r\n        // console.log(trigger)\r\n\r\n        // 得到 'input.update.bv'\r\n        let events = $.map(trigger, function (item) {\r\n            return item + '.update.bv';\r\n        }).join(' ');\r\n\r\n\r\n        fields.each((index, fieldElement) => {\r\n\r\n            let $field = $(fieldElement);\r\n\r\n\r\n            // 字段元素容器选择器\r\n            let group = this.options.fields[field].group || this.options.group;\r\n            // 字段元素容器jq对象\r\n            let $parent = $field.parents(group);\r\n\r\n            // 允许用户指示错误消息的显示位置,email: {container:'#errors',...}\r\n            let container = ('function' === typeof (this.options.fields[field].container || this.options.container)) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : (this.options.fields[field].container || this.options.container);\r\n\r\n\r\n            // 得到错误消息容器Jq对象\r\n            let $message = (container && container !== 'tooltip' && container !== 'popover') ? $(container) : this._getMessageContainer($field, group);\r\n\r\n            //给它加上一个.has-error 类  来自https://getbootstrap.com/docs/3.4/css/#forms\r\n            if (container && container !== 'tooltip' && container !== 'popover') {\r\n                $message.addClass('has-error');\r\n            }\r\n\r\n            // 删除所有错误消息和反馈图标\r\n            $message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]').remove();\r\n            $parent.find('i[data-bv-icon-for=\"' + field + '\"]').remove();\r\n\r\n            // 每当用户更改字段值时，将其标记为尚未验证(比如手动修改input的内容时)\r\n            $field.off(events).on(events, function () {\r\n                console.log('input被输入了触发 |' + events + '|that.updateStatus($(this), that.STATUS_NOT_VALIDATED)')\r\n                that.updateStatus($(this), that.STATUS_NOT_VALIDATED);\r\n            });\r\n\r\n            // 创建用于显示错误消息的帮助块元素\r\n            $field.data('bv.messages', $message);\r\n\r\n            Object.keys(this.options.fields[field].validators).forEach(validatorName => {\r\n                $field.data('bv.result.' + validatorName, this.STATUS_NOT_VALIDATED);\r\n\r\n                if (!updateAll || index === total - 1) {\r\n                    $('<small/>')\r\n                        .css('display', 'none')\r\n                        .addClass('help-block')\r\n                        .attr('data-bv-validator', validatorName)\r\n                        .attr('data-bv-for', field)\r\n                        .attr('data-bv-result', this.STATUS_NOT_VALIDATED)\r\n                        .html(this._getMessage(field, validatorName))\r\n                        .appendTo($message);\r\n                }\r\n\r\n\r\n                // 初始化验证器,当验证器有init方法的时候，调用init方法\r\n                if ('function' === typeof $.fn.bootstrapValidation.validators[validatorName].init) {\r\n                    $.fn.bootstrapValidation.validators[validatorName].init(this, $field, this.options.fields[field].validators[validatorName]);\r\n                }\r\n            });\r\n\r\n\r\n            // 准备反馈图标\r\n            // 可以从Bootstrap3.1获取 (http://getbootstrap.com/css/#forms-control-validation)\r\n            if (this.options.fields[field].feedbackIcons !== false && this.options.fields[field].feedbackIcons !== 'false'\r\n                && this.options.feedbackIcons\r\n                && this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid\r\n                && (!updateAll || index === total - 1)) {\r\n                // $parent.removeClass('has-success').removeClass('has-error').addClass('has-feedback');\r\n                // 保留从后端填充的错误消息\r\n                $parent.addClass('has-feedback'); //字段元素容器，再添加一个类 https://getbootstrap.com/docs/3.4/css/#forms\r\n\r\n                //在字段元素后面插入这个反馈图标容器 i元素\r\n                let $icon = $('<i/>')\r\n                    .css('display', 'none')\r\n                    .addClass('form-control-feedback')\r\n                    .attr('data-bv-icon-for', field)\r\n                    .insertAfter($field);\r\n\r\n                // 对于复选框和单选框的错误图标要特殊处理\r\n                if ('checkbox' === type || 'radio' === type) {\r\n\r\n                    //这里得到的是label标签\r\n                    let $fieldParent = $field.parent();\r\n\r\n                    if ($fieldParent.hasClass(type)) {//如果有类 比如 class=\"checkbox\"\r\n                        $icon.insertAfter($fieldParent); //直接在后面插入\r\n                    } else if ($fieldParent.parent().hasClass(type)) {//否则判断父类的父类是否有 比如 class=\"checkbox\"\r\n                        $icon.insertAfter($fieldParent.parent());//有的话插入到父类的父类的后面。\r\n                    }\r\n                }\r\n\r\n                // 如果没有标签，反馈图标将无法正确渲染\r\n                // https://github.com/twbs/bootstrap/issues/12873\r\n                if ($parent.find('label').length === 0) {\r\n                    $icon.addClass('bv-no-label');\r\n                }\r\n                // 如果是输入框组的话 反馈图标还要再特殊处理\r\n                if ($parent.find('.input-group').length !== 0) {\r\n                    $icon.addClass('bv-icon-input-group')\r\n                        .insertAfter($parent.find('.input-group').eq(0));\r\n                }\r\n\r\n                // console.log(updateAll);\r\n\r\n                // 将图标存储为字段元素的数据\r\n                if (!updateAll) {//不是单选或者复选\r\n                    console.log($field)\r\n                    $field.data('bv.icon', $icon);\r\n                } else if (index === total - 1) { //目前只会走这里 下面还有公共api，等等看看会不会走上面\r\n                    // 具有相同名称的所有字段都具有相同的图标\r\n                    fields.data('bv.icon', $icon);\r\n                }\r\n\r\n                if (container) {//如果有传递错误消息容器\r\n                    $field\r\n                        // 当字段获得焦点时显示工具提示/弹出消息\r\n                        .off('focus.container.bv')\r\n                        .on('focus.container.bv', function () {\r\n                            console.log(container)\r\n                            switch (container) {//根据错误消息容器，判断是那一种\r\n                                case 'tooltip':\r\n                                    $(this).data('bv.icon').tooltip('show');\r\n                                    break;\r\n                                case 'popover':\r\n                                    $(this).data('bv.icon').popover('show');\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        })\r\n                        // 并在失去焦点时隐藏它们\r\n                        .off('blur.container.bv')\r\n                        .on('blur.container.bv', function () {\r\n                            switch (container) {\r\n                                case 'tooltip':\r\n                                    $(this).data('bv.icon').tooltip('hide');\r\n                                    break;\r\n                                case 'popover':\r\n                                    $(this).data('bv.icon').popover('hide');\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        // 准备事件\r\n        fields\r\n            .on(this.options.events.fieldSuccess, function (e, data) {\r\n                let onSuccess = that.getOptions(data.field, null, 'onSuccess');\r\n                if (onSuccess) {\r\n\r\n                    Utils.call(onSuccess, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.fieldError, function (e, data) {\r\n                let onError = that.getOptions(data.field, null, 'onError');\r\n                if (onError) {\r\n                    Utils.call(onError, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.fieldStatus, function (e, data) {\r\n                let onStatus = that.getOptions(data.field, null, 'onStatus');\r\n                if (onStatus) {\r\n                    Utils.call(onStatus, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.validatorError, function (e, data) {\r\n                let onError = that.getOptions(data.field, data.validator, 'onError');\r\n                if (onError) {\r\n                    Utils.call(onError, [e, data]);\r\n                }\r\n            })\r\n            .on(this.options.events.validatorSuccess, function (e, data) {\r\n                let onSuccess = that.getOptions(data.field, data.validator, 'onSuccess');\r\n                if (onSuccess) {\r\n                    Utils.call(onSuccess, [e, data]);\r\n                }\r\n            });\r\n\r\n        // 设置实时模式\r\n        events = $.map(trigger, function (item) {\r\n            return item + '.live.bv';\r\n        }).join(' ');\r\n\r\n        // console.log(events)\r\n\r\n        switch (this.options.live) {//判断验证模式\r\n            case 'submitted':\r\n                break;\r\n            case 'disabled':\r\n                fields.off(events);\r\n                break;\r\n            case 'enabled':\r\n            /* falls through */\r\n            default:\r\n                // console.log(fields)\r\n                fields.off(events).on(events, function () {\r\n                    if (that._exceedThreshold($(this))) { //检测是否超过阈值\r\n                        that.validateField($(this));\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n\r\n        fields.trigger($.Event(this.options.events.fieldInit), {\r\n            bv: this,\r\n            field: field,\r\n            element: fields\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取用于放置错误消息的元素\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @param {String} group\r\n     * @returns {jQuery}\r\n     */\r\n    _getMessageContainer($field, group) {\r\n        let $parent = $field.parent();\r\n        if ($parent.is(group)) {\r\n            return $parent;\r\n        }\r\n\r\n        let cssClasses = $parent.attr('class');\r\n        if (!cssClasses) {\r\n            return this._getMessageContainer($parent, group);\r\n        }\r\n\r\n        cssClasses = cssClasses.split(' ');\r\n        let n = cssClasses.length;\r\n        for (let i = 0; i < n; i++) {\r\n            if (/^col-(xs|sm|md|lg)-\\d+$/.test(cssClasses[i]) || /^col-(xs|sm|md|lg)-offset-\\d+$/.test(cssClasses[i])) {\r\n                return $parent;\r\n            }\r\n        }\r\n\r\n        return this._getMessageContainer($parent, group);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取给定字段和验证器的错误消息\r\n     *\r\n     * @param {String} field 字段名\r\n     * @param {String} validatorName validator名称\r\n     * @returns {String}\r\n     */\r\n    _getMessage(field, validatorName) {\r\n        if (!this.options.fields[field] || !$.fn.bootstrapValidation.validators[validatorName]\r\n            || !this.options.fields[field].validators || !this.options.fields[field].validators[validatorName]) {\r\n            return '';\r\n        }\r\n\r\n        let options = this.options.fields[field].validators[validatorName];\r\n        switch (true) {\r\n            case (!!options.message):\r\n                return options.message;\r\n            case (!!this.options.fields[field].message):\r\n                return this.options.fields[field].message;\r\n            case (!!$.fn.bootstrapValidation.i18n[validatorName]):\r\n                return $.fn.bootstrapValidation.i18n[validatorName]['default'];\r\n            default:\r\n                return this.options.message;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查该字段是否已排除。\r\n     * 返回true表示该字段将不被验证\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    _isExcluded($field) {\r\n        let excludedAttr = $field.attr('data-bv-excluded'),\r\n            // I still need to check the 'name' attribute while initializing the field\r\n            field = $field.attr('data-bv-field') || $field.attr('name');\r\n\r\n        switch (true) {\r\n            case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'true' || this.options.fields[field].excluded === true)):\r\n            case (excludedAttr === 'true'):\r\n            case (excludedAttr === ''):\r\n                return true;\r\n\r\n            case (!!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === 'false' || this.options.fields[field].excluded === false)):\r\n            case (excludedAttr === 'false'):\r\n                return false;\r\n\r\n            default:\r\n                if (this.options.excluded) {\r\n                    // Convert to array first\r\n                    if ('string' === typeof this.options.excluded) {\r\n                        this.options.excluded = $.map(this.options.excluded.split(','), function (item) {\r\n                            // Trim the spaces\r\n                            return $.trim(item);\r\n                        });\r\n                    }\r\n\r\n                    let length = this.options.excluded.length;\r\n                    for (let i = 0; i < length; i++) {\r\n                        if (('string' === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))\r\n                            || ('function' === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 在验证字段元素后调用\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @param {String} [validatorName] 验证其名称\r\n     */\r\n    _onFieldValidated($field, validatorName) {\r\n        let field = $field.attr('data-bv-field'),\r\n            validators = this.options.fields[field].validators,\r\n            counter = {},\r\n            numValidators = 0,\r\n            data = {\r\n                bv: this,\r\n                field: field,\r\n                element: $field,\r\n                validator: validatorName,\r\n                result: $field.data('bv.response.' + validatorName)\r\n            };\r\n\r\n        // Trigger an event after given validator completes\r\n        if (validatorName) {\r\n            switch ($field.data('bv.result.' + validatorName)) {\r\n                case this.STATUS_INVALID:\r\n                    $field.trigger($.Event(this.options.events.validatorError), data);\r\n                    break;\r\n                case this.STATUS_VALID:\r\n                    $field.trigger($.Event(this.options.events.validatorSuccess), data);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        counter[this.STATUS_NOT_VALIDATED] = 0;\r\n        counter[this.STATUS_VALIDATING] = 0;\r\n        counter[this.STATUS_INVALID] = 0;\r\n        counter[this.STATUS_VALID] = 0;\r\n\r\n        for (let v in validators) {\r\n            if (validators[v].enabled === false) {\r\n                continue;\r\n            }\r\n\r\n            numValidators++;\r\n            let result = $field.data('bv.result.' + v);\r\n            if (result) {\r\n                counter[result]++;\r\n            }\r\n        }\r\n\r\n        if (counter[this.STATUS_VALID] === numValidators) {\r\n            // Remove from the list of invalid fields\r\n            this.$invalidFields = this.$invalidFields.not($field);\r\n\r\n            $field.trigger($.Event(this.options.events.fieldSuccess), data);\r\n        }\r\n        // If all validators are completed and there is at least one validator which doesn't pass\r\n        else if ((counter[this.STATUS_NOT_VALIDATED] === 0 || !this._isOptionEnabled(field, 'verbose')) && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {\r\n            // Add to the list of invalid fields\r\n            this.$invalidFields = this.$invalidFields.add($field);\r\n\r\n            $field.trigger($.Event(this.options.events.fieldError), data);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查字段选项是否已启用\r\n     *\r\n     * @param {String} field The field name\r\n     * @param {String} option The option name, \"verbose\", \"autoFocus\", for example\r\n     * @returns {Boolean}\r\n     */\r\n    _isOptionEnabled(field, option) {\r\n        if (this.options.fields[field] && (this.options.fields[field][option] === 'true' || this.options.fields[field][option] === true)) {\r\n            return true;\r\n        }\r\n        if (this.options.fields[field] && (this.options.fields[field][option] === 'false' || this.options.fields[field][option] === false)) {\r\n            return false;\r\n        }\r\n        return this.options[option] === 'true' || this.options[option] === true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查字段值的字符数是否超过阈值\r\n     *\r\n     * @param {jQuery} $field 字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    _exceedThreshold($field) {\r\n        let field = $field.attr('data-bv-field'),\r\n            threshold = this.options.fields[field].threshold || this.options.threshold;\r\n        if (!threshold) {\r\n            return true;\r\n        }\r\n        let cannotType = $.inArray($field.attr('type'), ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'reset', 'submit']) !== -1;\r\n        return (cannotType || $field.val().length >= threshold);\r\n    }\r\n\r\n\r\n    /**\r\n     * 按给定名称检索字段元素\r\n     *\r\n     * @param {String} field 字段名称\r\n     * @returns {null|jQuery[]}\r\n     */\r\n    getFieldElements(field) {\r\n        if (!this._cacheFields[field]) {\r\n            this._cacheFields[field] = (this.options.fields[field] && this.options.fields[field].selector)\r\n                ? $(this.options.fields[field].selector)\r\n                : this.$form.find('[name=\"' + field + '\"]');\r\n        }\r\n        return this._cacheFields[field];\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新字段的所有验证结果\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @param {String} status 状态。可以是“NOT_VALIDATED”、“VALIDATION”、“INVALID”或“VALID”\r\n     * @param {String} [validatorName] 验证器名称。如果为null，该方法将更新所有验证器的有效性结果\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    updateStatus(field, status, validatorName) {\r\n        // console.log(field)\r\n\r\n        let fields = $([]);\r\n\r\n        // console.log(typeof field)\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (status === this.STATUS_NOT_VALIDATED) {//如果传递进来的状态是无验证的。\r\n            // 重置标志\r\n            // 当延迟验证器在键入时返回true时，防止表单进行提交\r\n            this._submitIfValid = false;\r\n        }\r\n\r\n        //重新接受当前实例\r\n        let that = this;\r\n        //类型\r\n\r\n        // console.log(fields)\r\n        let type = fields.attr('type');\r\n        // console.log(type)\r\n        let group = this.options.fields[field].group || this.options.group;\r\n        //如果是单选框或者多选框则长度为1，否则就取字段的长度。\r\n        let total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length;\r\n\r\n        // console.log(total)\r\n\r\n        for (let i = 0; i < total; i++) {\r\n            let $field = fields.eq(i);\r\n\r\n\r\n            if (this._isExcluded($field)) {//判断是否被排除的字段，如果是排除的字段，直接逃过这次循环。\r\n                continue;\r\n            }\r\n\r\n            let $parent = $field.parents(group);\r\n            let $message = $field.data('bv.messages');\r\n\r\n            //直接通过属性选择器找到所有的错误信息包裹small\r\n            let $allErrors = $message.find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]');\r\n\r\n            //错误信息，判断验证器是否有传入，如果有传入则\r\n            let $errors = validatorName ? $allErrors.filter('[data-bv-validator=\"' + validatorName + '\"]') : $allErrors;\r\n\r\n\r\n            let $icon = $field.data('bv.icon');\r\n            let container = ('function' === typeof (this.options.fields[field].container || this.options.container)) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : (this.options.fields[field].container || this.options.container);\r\n            let isValidField = null;\r\n\r\n            // 更新状态\r\n            if (validatorName) {//如果有验证器名称，就直接更新这一个\r\n                $field.data('bv.result.' + validatorName, status);\r\n            } else {//否则更新所有的。\r\n\r\n                for (let v in this.options.fields[field].validators) {\r\n                    $field.data('bv.result.' + v, status);\r\n                }\r\n            }\r\n\r\n            // 显示/隐藏错误元素和反馈图标\r\n            $errors.attr('data-bv-result', status);\r\n\r\n            // 确定包含元素的选项卡\r\n            let $tabPane = $field.parents('.tab-pane');\r\n            let tabId;\r\n            let $tab;\r\n            if ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n                $tab = $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').parent();\r\n            }\r\n\r\n            switch (status) {\r\n                case this.STATUS_VALIDATING://如果是正在验证的状态\r\n                    isValidField = null;//清空验证字段\r\n                    //禁用提交按钮\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').removeClass('has-error');//移除成功或者错误的类\r\n                    if ($icon) {//移除成功和失败的图标，添加一个正在验证的类，并让这个icon显示\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show();\r\n                    }\r\n                    if ($tab) {//如果tab存在\r\n                        //移除所有的tab成功的类和tab失败的类\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_INVALID://如果是验证失败的。\r\n                    isValidField = false;//是否验证的改成状态为false\r\n\r\n                    //禁用提交按钮\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').addClass('has-error');//移除成功或者错误的类\r\n                    if ($icon) {//移除成功和失败的图标，添加一个正在验证的类，并让这个icon显示\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show();\r\n                    }\r\n                    if ($tab) {//移除所有的tab成功的类和tab失败的类\r\n                        $tab.removeClass('bv-tab-success').addClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_VALID:\r\n                    // 如果字段有效（通过所有验证器）\r\n                    isValidField = ($allErrors.filter('[data-bv-result=\"' + this.STATUS_NOT_VALIDATED + '\"]').length === 0)\r\n                        ? ($allErrors.filter('[data-bv-result=\"' + this.STATUS_VALID + '\"]').length === $allErrors.length)  // 所有验证器已完成\r\n                        : null;                                                                                            // 有些验证器还没有完成\r\n                    if (isValidField !== null) {\r\n                        this.disableSubmitButtons(this.$submitButton ? !this.isValid() : !isValidField);\r\n                        if ($icon) {\r\n                            $icon\r\n                                .removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid)\r\n                                .addClass(isValidField ? this.options.feedbackIcons.valid : this.options.feedbackIcons.invalid)\r\n                                .show();\r\n                        }\r\n                    }\r\n\r\n                    $parent.removeClass('has-error has-success').addClass(this.isValidContainer($parent) ? 'has-success' : 'has-error');\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error').addClass(this.isValidContainer($tabPane) ? 'bv-tab-success' : 'bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_NOT_VALIDATED:\r\n                /* falls through */\r\n                default:\r\n                    isValidField = null;\r\n                    this.disableSubmitButtons(false);\r\n                    $parent.removeClass('has-success').removeClass('has-error');\r\n                    if ($icon) {\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide();\r\n                    }\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            switch (true) {\r\n                // Only show the first error message if it is placed inside a tooltip ...\r\n                case ($icon && 'tooltip' === container):\r\n                    (isValidField === false)\r\n                        ? $icon.css('cursor', 'pointer').tooltip('destroy').tooltip({\r\n                            container: 'body',\r\n                            html: true,\r\n                            placement: 'auto top',\r\n                            title: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html()\r\n                        })\r\n                        : $icon.css('cursor', '').tooltip('destroy');\r\n                    break;\r\n                // ... or popover\r\n                case ($icon && 'popover' === container):\r\n                    (isValidField === false)\r\n                        ? $icon.css('cursor', 'pointer').popover('destroy').popover({\r\n                            container: 'body',\r\n                            content: $allErrors.filter('[data-bv-result=\"' + that.STATUS_INVALID + '\"]').eq(0).html(),\r\n                            html: true,\r\n                            placement: 'auto top',\r\n                            trigger: 'hover click'\r\n                        })\r\n                        : $icon.css('cursor', '').popover('destroy');\r\n                    break;\r\n                default:\r\n                    (status === this.STATUS_INVALID) ? $errors.show() : $errors.hide();\r\n                    break;\r\n            }\r\n\r\n            // Trigger an event\r\n            $field.trigger($.Event(this.options.events.fieldStatus), {\r\n                bv: this,\r\n                field: field,\r\n                element: $field,\r\n                status: status\r\n            });\r\n            this._onFieldValidated($field, validatorName);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * 禁用/启用提交按钮\r\n     *\r\n     * @param {Boolean} disabled 可以是真的也可以是假的\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    disableSubmitButtons(disabled) {\r\n        if (!disabled) {\r\n            this.$form.find(this.options.submitButtons).removeAttr('disabled');\r\n        } else if (this.options.live !== 'disabled') {\r\n            // Don't disable if the live validating mode is disabled\r\n            this.$form.find(this.options.submitButtons).attr('disabled', 'disabled');\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 获取字段选项\r\n     *\r\n     * @param {String|jQuery} [field] 字段名称或字段元素。如果未设置，该方法将返回表单选项\r\n     * @param {String} [validator] 验证器的名称。如果为null，则该方法返回表单选项\r\n     * @param {String} [option] 选项名称\r\n     * @return {String|Object}\r\n     */\r\n    getOptions(field, validator, option) {\r\n        if (!field) {\r\n            return option ? this.options[option] : this.options;\r\n        }\r\n        if ('object' === typeof field) {\r\n            field = field.attr('data-bv-field');\r\n        }\r\n        if (!this.options.fields[field]) {\r\n            return null;\r\n        }\r\n\r\n        let options = this.options.fields[field];\r\n        if (!validator) {\r\n            return option ? options[option] : options;\r\n        }\r\n        if (!options.validators || !options.validators[validator]) {\r\n            return null;\r\n        }\r\n\r\n        return option ? options.validators[validator][option] : options.validators[validator];\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证给定字段\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    validateField(field) {\r\n        let fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {\r\n            return this;\r\n        }\r\n\r\n        let that = this,\r\n            type = fields.attr('type'),\r\n            total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n            updateAll = ('radio' === type || 'checkbox' === type),\r\n            validators = this.options.fields[field].validators,\r\n            verbose = this._isOptionEnabled(field, 'verbose'),\r\n            validatorName,\r\n            validateResult;\r\n\r\n        for (let i = 0; i < total; i++) {\r\n            let $field = fields.eq(i);\r\n            if (this._isExcluded($field)) {\r\n                continue;\r\n            }\r\n\r\n            let stop = false;\r\n            for (validatorName in validators) {\r\n                if ($field.data('bv.dfs.' + validatorName)) {\r\n                    $field.data('bv.dfs.' + validatorName).reject();\r\n                }\r\n                if (stop) {\r\n                    break;\r\n                }\r\n\r\n                // Don't validate field if it is already done\r\n                let result = $field.data('bv.result.' + validatorName);\r\n                if (result === this.STATUS_VALID || result === this.STATUS_INVALID) {\r\n                    this._onFieldValidated($field, validatorName);\r\n                    continue;\r\n                } else if (validators[validatorName].enabled === false) {\r\n                    this.updateStatus(updateAll ? field : $field, this.STATUS_VALID, validatorName);\r\n                    continue;\r\n                }\r\n\r\n                $field.data('bv.result.' + validatorName, this.STATUS_VALIDATING);\r\n                validateResult = $.fn.bootstrapValidation.validators[validatorName].validate(this, $field, validators[validatorName]);\r\n\r\n                // validateResult can be a $.Deferred object ...\r\n                if ('object' === typeof validateResult && validateResult.resolve) {\r\n                    this.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);\r\n                    $field.data('bv.dfs.' + validatorName, validateResult);\r\n\r\n                    validateResult.done(function ($f, v, response) {\r\n                        // v is validator name\r\n                        $f.removeData('bv.dfs.' + v).data('bv.response.' + v, response);\r\n                        if (response.message) {\r\n                            that.updateMessage($f, v, response.message);\r\n                        }\r\n\r\n                        that.updateStatus(updateAll ? $f.attr('data-bv-field') : $f, response.valid ? that.STATUS_VALID : that.STATUS_INVALID, v);\r\n\r\n                        if (response.valid && that._submitIfValid === true) {\r\n                            // If a remote validator returns true and the form is ready to submit, then do it\r\n                            that._submit();\r\n                        } else if (!response.valid && !verbose) {\r\n                            stop = true;\r\n                        }\r\n                    });\r\n                }\r\n                // ... or object { valid: true/false, message: 'dynamic message' }\r\n                else if ('object' === typeof validateResult && validateResult.valid !== undefined && validateResult.message !== undefined) {\r\n                    $field.data('bv.response.' + validatorName, validateResult);\r\n                    this.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);\r\n                    this.updateStatus(updateAll ? field : $field, validateResult.valid ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n                    if (!validateResult.valid && !verbose) {\r\n                        break;\r\n                    }\r\n                }\r\n                // ... or a boolean value\r\n                else if ('boolean' === typeof validateResult) {\r\n                    $field.data('bv.response.' + validatorName, validateResult);\r\n                    this.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n                    if (!validateResult && !verbose) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * 检查给定容器中的所有字段是否有效。\r\n     * 当使用诸如选项卡、折叠之类的向导时，它很有用\r\n     *\r\n     * @param {String|jQuery} container 容器选择器或元素\r\n     * @returns {Boolean}\r\n     */\r\n    isValidContainer(container) {\r\n        let that = this,\r\n            map = {},\r\n            $container = ('string' === typeof container) ? $(container) : container;\r\n        if ($container.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        $container.find('[data-bv-field]').each(function () {\r\n            let $field = $(this),\r\n                field = $field.attr('data-bv-field');\r\n            if (!that._isExcluded($field) && !map[field]) {\r\n                map[field] = $field;\r\n            }\r\n        });\r\n\r\n        for (let field in map) {\r\n            let $f = map[field];\r\n            if ($f.data('bv.messages')\r\n                .find('.help-block[data-bv-validator][data-bv-for=\"' + field + '\"]')\r\n                .filter('[data-bv-result=\"' + this.STATUS_INVALID + '\"]')\r\n                .length > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新错误消息\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @param {String} validator 验证器名称\r\n     * @param {String} message 消息\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    updateMessage(field, validator, message) {\r\n        let $fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                $fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                $fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        $fields.each(function () {\r\n            $(this).data('bv.messages').find('.help-block[data-bv-validator=\"' + validator + '\"][data-bv-for=\"' + field + '\"]').html(message);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 验证表单\r\n     *\r\n     * @returns {BootstrapValidator}\r\n     */\r\n    validate() {\r\n        if (!this.options.fields) {\r\n            return this;\r\n        }\r\n        this.disableSubmitButtons(true);\r\n\r\n        this._submitIfValid = false;\r\n        for (let field in this.options.fields) {\r\n            this.validateField(field);\r\n        }\r\n\r\n        this._submit();\r\n        this._submitIfValid = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在完成所有验证时调用\r\n     */\r\n    _submit() {\r\n        let isValid = this.isValid(),\r\n            eventType = isValid ? this.options.events.formSuccess : this.options.events.formError,\r\n            e = $.Event(eventType);\r\n\r\n        this.$form.trigger(e);\r\n\r\n        // Call default handler\r\n        // Check if whether the submit button is clicked\r\n        if (this.$submitButton) {\r\n            isValid ? this._onSuccess(e) : this._onError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查表格有效性\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isValid() {\r\n        for (let field in this.options.fields) {\r\n            if (!this.isValidField(field)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 检查字段是否有效\r\n     *\r\n     * @param {String|jQuery} field 字段名称或字段元素\r\n     * @returns {Boolean}\r\n     */\r\n    isValidField(field) {\r\n        let fields = $([]);\r\n        switch (typeof field) {\r\n            case 'object':\r\n                fields = field;\r\n                field = field.attr('data-bv-field');\r\n                break;\r\n            case 'string':\r\n                fields = this.getFieldElements(field);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {\r\n            return true;\r\n        }\r\n\r\n        let type = fields.attr('type'),\r\n            total = ('radio' === type || 'checkbox' === type) ? 1 : fields.length,\r\n            $field, validatorName, status;\r\n        for (let i = 0; i < total; i++) {\r\n            $field = fields.eq(i);\r\n            if (this._isExcluded($field)) {\r\n                continue;\r\n            }\r\n            for (validatorName in this.options.fields[field].validators) {\r\n                if (this.options.fields[field].validators[validatorName].enabled === false) {\r\n                    continue;\r\n                }\r\n                status = $field.data('bv.result.' + validatorName);\r\n                if (status !== this.STATUS_VALID) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * error.form.bv事件的默认处理程序。\r\n     * 当存在无效字段时将调用它\r\n     *\r\n     * @param {jQuery.Event} e jquery的事件对象\r\n     */\r\n    _onError(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return;\r\n        }\r\n\r\n        if ('submitted' === this.options.live) {\r\n            // Enable live mode\r\n            this.options.live = 'enabled';\r\n            let that = this;\r\n            for (let field in this.options.fields) {\r\n                (function (f) {\r\n                    let fields = that.getFieldElements(f);\r\n                    if (fields.length) {\r\n                        let type = $(fields[0]).attr('type'),\r\n                            event = ('radio' === type || 'checkbox' === type || 'file' === type || 'SELECT' === $(fields[0]).get(0).tagName) ? 'change' : that._changeEvent,\r\n                            trigger = that.options.fields[field].trigger || that.options.trigger || event,\r\n                            events = $.map(trigger.split(' '), function (item) {\r\n                                return item + '.live.bv';\r\n                            }).join(' ');\r\n\r\n                        fields.off(events).on(events, function () {\r\n                            if (that._exceedThreshold($(this))) {\r\n                                that.validateField($(this));\r\n                            }\r\n                        });\r\n                    }\r\n                })(field);\r\n            }\r\n        }\r\n\r\n        // Determined the first invalid field which will be focused on automatically\r\n        for (let i = 0; i < this.$invalidFields.length; i++) {\r\n            let $field = this.$invalidFields.eq(i),\r\n                autoFocus = this._isOptionEnabled($field.attr('data-bv-field'), 'autoFocus');\r\n            if (autoFocus) {\r\n                // Activate the tab containing the field if exists\r\n                let $tabPane = $field.parents('.tab-pane'), tabId;\r\n                if ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n                    $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').tab('show');\r\n                }\r\n\r\n                // Focus the field\r\n                $field.focus();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * success.form.bv事件的默认处理程序。\r\n     * 当所有字段都有效时，将调用它\r\n     *\r\n     * @param {jQuery.Event} e jquery的事件对象\r\n     */\r\n    _onSuccess(e) {\r\n        if (e.isDefaultPrevented()) {\r\n            return;\r\n        }\r\n\r\n        // 让按钮被禁用\r\n        this.disableSubmitButtons(true);\r\n\r\n        // 使用默认的提交方式提交\r\n        this.defaultSubmit();\r\n    }\r\n\r\n\r\n    /**\r\n     * 使用默认提交方式提交表单。\r\n     * 它在提交表单时也不执行任何验证\r\n     */\r\n    defaultSubmit() {\r\n        if (this.$submitButton) {\r\n            // Create hidden input to send the submit buttons\r\n            $('<input/>')\r\n                .attr('type', 'hidden')\r\n                .attr('data-bv-submit-hidden', '')\r\n                .attr('name', this.$submitButton.attr('name'))\r\n                .val(this.$submitButton.val())\r\n                .appendTo(this.$form);\r\n        }\r\n\r\n        // Submit form\r\n        this.$form.off('submit.bv').submit();\r\n    }\r\n\r\n}\r\n\r\n\r\nBootstrapValidation.VERSION = Constants.VERSION\r\nBootstrapValidation.DEFAULTS = Constants.DEFAULTS\r\n\r\n\r\n// 定义插件\r\n$.fn.bootstrapValidation = function (option) {\r\n    //获取参数\r\n    let params = arguments;\r\n\r\n\r\n    return this.each(function () {\r\n\r\n\r\n        let $this = $(this);\r\n        let data = $this.data('bootstrapValidation');\r\n\r\n        //选项合并\r\n        let options = $.extend({}, $.fn.bootstrapValidation.defaults, 'object' === typeof option && option);\r\n\r\n        if (!data) {\r\n            data = new BootstrapValidation(this, options);\r\n            $this.data('bootstrapValidation', data);\r\n        }\r\n\r\n        if ('string' === typeof option) {\r\n            if (typeof data[option] !== 'function') {\r\n                throw new Error(`Unknown method: ${option}`);\r\n            }\r\n            data[option].apply(data, Array.prototype.slice.call(params, 1));\r\n        }\r\n    });\r\n\r\n};\r\n\r\n\r\n$.fn.bootstrapValidation.Constructor = BootstrapValidation;\r\n$.fn.bootstrapValidation.VERSION = Constants.VERSION\r\n$.fn.bootstrapValidation.defaults = BootstrapValidation.DEFAULTS\r\n$.fn.bootstrapValidation.validators = Rules;\r\n$.fn.bootstrapValidation.i18n = {};\r\n$.fn.bootstrapValidation.utils = Utils\r\n\r\n\r\nexport default BootstrapValidation;\r\n"],"names":["$"],"mappings":"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"}